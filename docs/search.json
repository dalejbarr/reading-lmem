[{"path":"index.html","id":"workshop-overview","chapter":"Workshop Overview","heading":"Workshop Overview","text":"Dale J. BarrUniversity Basel, March 3-4, 2022","code":""},{"path":"index.html","id":"workshop-goals","chapter":"Workshop Overview","heading":"Workshop goals","text":"goal workshop provide foundational understanding use mixed-effects models analysis panel (longitudinal) data, focus repeated-measures data. Mixed-effects models regression models estimate 'mix' fixed random effects.Two pre-requisites workshop : (1) basic understanding linear regression (2) familiarity R statistical programming environment (https://cran.r-project.org) important pre-requisite workshop.Please R RStudio installed laptop prior start workshop, including packages tidyverse lme4. can find help installation Appendix.possible understand conceptual content workshop without knowing R, interactive exercises require understanding fundamentals R programming. beginners, recommended work introductory materials Appendix.","code":""},{"path":"index.html","id":"workshop-plan","chapter":"Workshop Overview","heading":"Workshop plan","text":"Day 1 (Thursday, March 3, 2pm-6pm): Linear regression\ngeneral linear model\nmultiple regression\ninteractions\nmodeling trends (polynomial, generalized additive mixed models)\ngeneral linear modelmultiple regressioninteractionsmodeling trends (polynomial, generalized additive mixed models)Day 2 (Friday, March 4, 9am-1pm): Mixed-effects modeling\nvariance-covariance matrices\nwalkthrough sleepstudy data\nspecifying random-effects structure\ngoing :\ndealing autocorrelation\nGeneralized Linear Mixed Models (GLMMs) \nGeneralized Additive Mixed Models (GAMMs)\n\nvariance-covariance matriceswalkthrough sleepstudy dataspecifying random-effects structuregoing :\ndealing autocorrelation\nGeneralized Linear Mixed Models (GLMMs) \nGeneralized Additive Mixed Models (GAMMs)\ndealing autocorrelationGeneralized Linear Mixed Models (GLMMs) andGeneralized Additive Mixed Models (GAMMs)","code":""},{"path":"index.html","id":"notes-on-these-materials","chapter":"Workshop Overview","heading":"Notes on these materials","text":"materials comprise interactive textbook. \"chapter\" contains embedded exercises well web applications help participants better understand content. interactive content work access material web browser. Printing material recommended.good keep local copy materials case website eventually disappears. can download offline version materials. contains current snapshot. things likely change workshop ongoing, best wait end workshop downloading permanent version.downloaded archive, just extract files, locate file index.html docs directory, open file using web browser.free re-use modify material textbook purposes, stipulation cite original work. Please note additional terms Creative Commons CC--SA 4.0 license governing re-use material.book built using R bookdown package. source files available github.","code":""},{"path":"index.html","id":"found-an-issue","chapter":"Workshop Overview","heading":"Found an issue?","text":"find errors typos, questions suggestions, please file issue https://github.com/dalejbarr/basel-longitudinal/issues. Thanks!","code":""},{"path":"regression-basics.html","id":"regression-basics","chapter":"1 Regression basics","heading":"1 Regression basics","text":"SlidesGLM web app","code":""},{"path":"regression-basics.html","id":"activities","chapter":"1 Regression basics","heading":"1.1 Activities","text":"following activities intended help ease regression R. start learning simulate univariate data build simple tables (\"tibbles\", R tidyverse speak). simulate data simple regression single response single predictor. Next, see generate predicted values, extract residuals, check diagnostics.Make sure loaded tidyverse package begin. need tibble() function.","code":"\nlibrary(\"tidyverse\")"},{"path":"regression-basics.html","id":"simulating-discrete-data","chapter":"1 Regression basics","heading":"1.1.1 Simulating discrete data","text":"sometimes useful just randomly sample things set, uniform probability value. sample() function useful .Take moment look help page function (?sample) attempting next task.Simulate outcome 20 rolls six-sided die.random number generation.Random number generation designed give different results every time.want get result, can 'seed' random number generator particular integer value. can integer value .Machine$integer.max machine equal 2147483647.demonstration:default, sample() chooses elements set uniform probability. can change using prob argument sample().Simulate random sampling 20 pet owners population 70% owners cats 30% dogs.","code":"\nsample(1:6, 20, TRUE)##  [1] 6 1 5 4 6 6 5 4 3 5 3 5 6 6 3 1 5 3 3 4\nset.seed(999)\n\nsample(1:10) # generates a permutation of the values##  [1]  4  7  1  6  8  2  5 10  9  3\nsample(1:10) # different results from above##  [1]  8  5  7  6 10  3  9  2  1  4\nset.seed(999) # setting the seed, so we should get the same\n              # as we did the first time\n\nsample(1:10)##  [1]  4  7  1  6  8  2  5 10  9  3\nsample(c(\"cat owner\", \"dog owner\"), 20, TRUE, prob = c(.7, .3))##  [1] \"cat owner\" \"dog owner\" \"cat owner\" \"dog owner\" \"cat owner\" \"dog owner\"\n##  [7] \"cat owner\" \"cat owner\" \"dog owner\" \"cat owner\" \"cat owner\" \"cat owner\"\n## [13] \"dog owner\" \"dog owner\" \"cat owner\" \"cat owner\" \"dog owner\" \"cat owner\"\n## [19] \"cat owner\" \"cat owner\""},{"path":"regression-basics.html","id":"simulating-normally-distributed-continuous-data","chapter":"1 Regression basics","heading":"1.1.2 Simulating normally distributed continuous data","text":"rnorm() function can used simulate data normal distribution. look help page function (type ?rnorm console).Simulate 10 observations normal distribution mean 5 standard deviation 3.Simulate 40 observations mean 0 standard deviation 7.","code":"\nrnorm(10, mean = 5, sd = 3)##  [1]  5.205005  5.301973  7.704034 -1.223071  1.314310  6.929133  3.920711\n##  [8]  5.882107  1.624195  6.926797\nrnorm(40, sd = 7) ## note we just use the default for 'mean'##  [1]  -7.74716306  -6.19388274 -10.87866601  -0.88675292  16.67864909\n##  [6]   4.20893271   1.25552887   7.56372039  -1.72768474 -14.79615893\n## [11]  -2.59369230   3.66007455   3.62463875  -9.81757611  -3.39945708\n## [16]   0.05948697  -8.97479301  -7.78105188   2.10465787   1.93535191\n## [21] -14.35614361   0.09933148   4.07586534  -0.24308471  -0.81664903\n## [26]  -4.51487461  12.21088120   2.56266132  -0.46766948   1.97828726\n## [31]   3.97386622  -8.95451128   3.04758166  -3.95850688  -6.46317949\n## [36]   8.15467802   7.29448078   7.72679854  -0.13002474  -8.02870368"},{"path":"regression-basics.html","id":"putting-things-into-a-table-or-tibble","chapter":"1 Regression basics","heading":"1.1.3 Putting things into a table (or tibble)","text":"working regression tabular data; data arranged form table.Tabular data structures, like lists, allow collection data different types (characters, integers, logical, etc.) subject constraint \"column\" table (element list) must number elements. base R version table called data.frame 'tidyverse' version called tibble. Tibbles far easier work , using . learn differences two data structures, see vignette(\"tibble\").Although often loading data tibble (e.g., using read_csv()), also useful able create tibbles typing data. , use tibble() function.Use tibble() create tibble name, age, sex 3-5 people whose names, ages, sex know.Convert built-base R iris dataset tibble, store variable iris2.as_tibble()Create tibble structure table , using minimum typing possible. (Hint: rep()). Store variable my_tbl.","code":"\nfamily <- tibble(name = c(\"Jorge\", \"Esther\", \"Mel\"),\n                 age = c(40, 41, 20),\n                 sex = c(\"male\", \"female\", \"male\") )\n\n# also note:\n# you can type this in row by row, rather than column by column,\n# using the 'tribble' function. See ?tribble \nfamily <- tribble(~name,  ~age, ~sex,\n                  \"Jorge\",   40,  \"male\",\n                  \"Esther\",  41,  \"female\",\n                  \"Mel\",     20,  \"male\")\niris2 <- as_tibble(iris)## # A tibble: 8 × 4\n##      ID A     B     C    \n##   <int> <chr> <chr> <chr>\n## 1     1 A1    B1    C1   \n## 2     2 A1    B2    C1   \n## 3     3 A1    B1    C1   \n## 4     4 A1    B2    C1   \n## 5     5 A2    B1    C1   \n## 6     6 A2    B2    C1   \n## 7     7 A2    B1    C1   \n## 8     8 A2    B2    C1\nmy_tbl <- tibble(ID = 1:8,\n                 A = rep(c(\"A1\", \"A2\"), each = 4),\n                 B = rep(c(\"B1\", \"B2\"), 4),\n                 C = \"C1\")    "},{"path":"regression-basics.html","id":"simulating-data-from-the-linear-model","chapter":"1 Regression basics","heading":"1.1.4 Simulating data from the linear model","text":"simple regression model single predictor form\\(Y_i = \\beta_0 + \\beta_1 X_i + e_i\\):\\(Y_i\\) value response variable observation \\(\\);\\(X_i\\) value predictor variable observation \\(\\);\\(\\beta_0\\) \\(\\beta_1\\) regression coefficients intercept slope regression line;\\(e_i\\) error observation \\(\\) (divergence model's fitted value regression line).assume errors \\(N \\sim \\left(0, \\sigma^2\\right)\\); , errors distributed according normal distribution mean zero variance \\(\\sigma^2\\). Note variance just square standard deviation; .e., standard deviation \\(\\sigma\\).Note also model make assumptions distribution predictor variables; \\(X_i\\) values can distribution.OK, things mind, using skills learned simulate data construct tibbles, next task :Make tibble contains 50 observations simulated according regression model\\(Y_i = 300 - 75 X_i + e_i\\)\\(\\sigma^2 = 100\\) \\(X_i\\) values integers 1 10 uniform probability.Store resulting tibble variable simdata response variable y predictor variable x.","code":"simdata <- tibble(x = sample( ??? ),\n                  e = rnorm( ??? ),\n                  y = 300...???)\n## make sure you have loaded the tidyverse [library(\"tidyverse\")]\nsimdata <- tibble(x = sample(1:10, 50, replace = TRUE),\n                  e = rnorm(50, 0, sqrt(100)),\n                  y = 300 - 75 * x + e)\n\nsimdata## # A tibble: 50 × 3\n##        x       e     y\n##    <int>   <dbl> <dbl>\n##  1     9   8.71  -366.\n##  2    10  -6.85  -457.\n##  3    10   0.234 -450.\n##  4     9  -6.32  -381.\n##  5     1  -6.75   218.\n##  6     9 -21.5   -397.\n##  7     9   9.89  -365.\n##  8     1   1.18   226.\n##  9     8 -10.3   -310.\n## 10     2  20.6    171.\n## # … with 40 more rows"},{"path":"regression-basics.html","id":"estimate-the-regression-coefficients","chapter":"1 Regression basics","heading":"1.1.5 Estimate the regression coefficients","text":"Use lm() function estimate regression coefficients (intercept slope) x y variables data just generated (simdata). Store result variable named fitted_model. Print model output using summary(). well values match put ?","code":"\nfitted_model <- lm(y ~ x, data = simdata)\n\nsummary(fitted_model)## \n## Call:\n## lm(formula = y ~ x, data = simdata)\n## \n## Residuals:\n##      Min       1Q   Median       3Q      Max \n## -20.1905  -6.6329   0.0272   6.6469  20.5421 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) 300.4343     2.9584   101.6   <2e-16 ***\n## x           -75.1941     0.4267  -176.2   <2e-16 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 9.122 on 48 degrees of freedom\n## Multiple R-squared:  0.9985, Adjusted R-squared:  0.9984 \n## F-statistic: 3.106e+04 on 1 and 48 DF,  p-value: < 2.2e-16"},{"path":"regression-basics.html","id":"deriving-predictions","chapter":"1 Regression basics","heading":"1.1.6 Deriving predictions","text":"fitted() function gives fitted values model; residuals() gives residuals. Try .predict.lm() function (just predict()) makes possible derive predicted values model. make predictions, create tibble values predictor variable (x case).Generate predicted values fitted_model integer values X 1 20.","code":"\nnew_data <- tibble(x = 1:20)\n\npredict(fitted_model, new_data)##             1             2             3             4             5 \n##   225.2402518   150.0461729    74.8520941    -0.3419848   -75.5360637 \n##             6             7             8             9            10 \n##  -150.7301425  -225.9242214  -301.1183002  -376.3123791  -451.5064579 \n##            11            12            13            14            15 \n##  -526.7005368  -601.8946156  -677.0886945  -752.2827734  -827.4768522 \n##            16            17            18            19            20 \n##  -902.6709311  -977.8650099 -1053.0590888 -1128.2531676 -1203.4472465"},{"path":"regression-basics.html","id":"model-diagnostics","chapter":"1 Regression basics","heading":"1.1.7 Model diagnostics","text":"plot() method fitted model objects gives diagnostic information. Probably important plot QQ (Quantile/Quantile), plots empirical quantiles theoretical quantiles normal distribution. can create plot using qqnorm(). Try .","code":""},{"path":"multiple-regression.html","id":"multiple-regression","chapter":"2 Multiple Regression","heading":"2 Multiple Regression","text":"","code":""},{"path":"multiple-regression.html","id":"resources","chapter":"2 Multiple Regression","heading":"2.1 Resources","text":"SlidesMy textbook chapter multiple regression covers lot material greater depth.","code":""},{"path":"multiple-regression.html","id":"activity","chapter":"2 Multiple Regression","heading":"2.2 Activity","text":"set exercises, going working real data collected students previous year student statistics University Glasgow. data anonymized, demographic sensitive information provided. student identified unique value variable id.Students given STats Anxiety Rating Scale (STARS), 51-item questionnaire measures student's attitudes toward statistics (Cruise et al., 1985). item, students asked rate either agreement statement 1 5 scale (1 = strongly disagree, 5 = strongly agree), rate anxious feel 1 5 scale (1 = anxiety, 5 = strong anxiety). Higher numbers mean anxiety negative attitudes toward statistics. interested, can see individual survey items .STARS items can divided six different subscales (Hanna et al., 2008), reflect different aspects statistics training students may feel anxiety toward: Asking Help, Interpretation, Self Concept, Teacher, Test, (Self-)Worth.Students course allowed freely choose software used perform class assignments, either SPSS R.data file stars-wide.csvYour task use multiple regression examine relationship stats anxiety subscales overall performance class, measured students' final grades.","code":""},{"path":"multiple-regression.html","id":"tasks","chapter":"2 Multiple Regression","heading":"2.3 Tasks","text":"Open new RMarkdown file create separate code chunks following tasks. Alternatively, can write code R script mark task using comments.","code":""},{"path":"multiple-regression.html","id":"import-the-data","chapter":"2 Multiple Regression","heading":"2.3.1 Import the data","text":"need use tidyverse package well corrr package. Load packages import stars-wide.csv. might want look Data Import Cheat Sheet.","code":"\nlibrary(\"tidyverse\")\nlibrary(\"corrr\")\n\nstars <- read_csv(\"data/stars-wide.csv\",\n                  col_types = \"iiddddddc\")\n\n## remember to look at your data before proceeding!\nstars## # A tibble: 50 × 9\n##       id grade Ask_For_Help Interpretation Self_Concept Teacher  Test Worth\n##    <int> <int>        <dbl>          <dbl>        <dbl>   <dbl> <dbl> <dbl>\n##  1     3    18         1              1            1        1    1.25  1.06\n##  2     7    15         3.25           3.18         2.29     1.8  3     2.56\n##  3    12    18         2.5            1.8          1.5      2    2.88  2.5 \n##  4    16    17         4              3.18         2.71     1.2  3.14  2.81\n##  5    19    19         1.75           3            1.43     1.6  2.88  1.44\n##  6    21    15         2              2.18         3.43     1.2  2.75  2   \n##  7    23    20         1.75           1.55         1.86     2    2.12  1.44\n##  8    24    22         1.75           2.45         1.43     1.2  3.12  1.38\n##  9    26    22         1              1            1        1    1.38  1   \n## 10    29    16         1.5            2.64         1.29     1    2.88  1.25\n## # … with 40 more rows, and 1 more variable: software <chr>"},{"path":"multiple-regression.html","id":"create-a-correlation-matrix","chapter":"2 Multiple Regression","heading":"2.3.2 Create a correlation matrix","text":"Create correlation matrix using corrr::correlate() showing bivariate correlation response variable (grade) six subscale means.Select variables need use correlate() corrr package.","code":"\nstars %>%\n  select(-id, -software) %>%\n  correlate() %>%\n  shave(upper = TRUE) %>%\n  fashion() %>%\n  knitr::kable(align = \"r\")## \n## Correlation method: 'pearson'\n## Missing treated using: 'pairwise.complete.obs'"},{"path":"multiple-regression.html","id":"visualize-all-pairwise-correlations","chapter":"2 Multiple Regression","heading":"2.3.3 Visualize all pairwise correlations","text":"Now visualize pairwise correlations.Use pairs(). See ?pairs help examples.","code":"\nstars %>%\n  select(-id, -software) %>%\n  pairs()"},{"path":"multiple-regression.html","id":"run-the-multiple-regression","chapter":"2 Multiple Regression","heading":"2.3.4 Run the multiple regression","text":"Estimate parameters multiple regression, grade response variable subscale means predictors. forget display results using summary(), take moment think numbers mean.lm(dv ~ iv1 + iv2 + ..., data = ???)","code":"\nmodel <- lm(grade ~ Ask_For_Help + Interpretation + Self_Concept +\n              Teacher + Test + Worth,\n            data = stars)\n\nsummary(model)## \n## Call:\n## lm(formula = grade ~ Ask_For_Help + Interpretation + Self_Concept + \n##     Teacher + Test + Worth, data = stars)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -5.6127 -1.6329  0.0755  1.6458  4.8041 \n## \n## Coefficients:\n##                Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)     22.3326     1.5704  14.221  < 2e-16 ***\n## Ask_For_Help     0.3845     0.5227   0.736  0.46599    \n## Interpretation  -0.6382     0.7675  -0.831  0.41032    \n## Self_Concept    -1.8611     0.5806  -3.206  0.00254 ** \n## Teacher          0.6040     0.6394   0.945  0.35009    \n## Test            -0.8344     0.7129  -1.170  0.24827    \n## Worth            0.6492     0.8337   0.779  0.44044    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 2.494 on 43 degrees of freedom\n## Multiple R-squared:  0.4024, Adjusted R-squared:  0.319 \n## F-statistic: 4.826 on 6 and 43 DF,  p-value: 0.0007612"},{"path":"multiple-regression.html","id":"which-subscale-is-the-best-predictor","chapter":"2 Multiple Regression","heading":"2.3.5 Which subscale is the 'best' predictor?","text":"one subscale strongly linked final grade? different subscales different variances, need re-run regression standardizing variables.calculate z-scores predictor; tidyverse can using","code":"stars %>%\n  mutate(zx = (x - mean(x)) / sd(x),\n         zy = (y - mean(y)) / sd(y), ... etc)\n## two ways to do this:\n## 1. just type it all out\nzscores1 <- stars %>%\n  mutate(Ask_For_Help = (Ask_For_Help - mean(Ask_For_Help)) / sd(Ask_For_Help),\n         Interpretation = (Interpretation - mean(Interpretation)) / sd(Interpretation),\n         Self_Concept = (Self_Concept - mean(Self_Concept)) / sd(Self_Concept),\n         Teacher = (Teacher - mean(Teacher)) / sd(Teacher),\n         Test = (Test - mean(Test)) / sd(Test),\n         Worth = (Worth - mean(Worth)) / sd(Worth))\n\n## 2 (advanced). use 'scoping' variant of mutate; see ?mutate_at\nzscores1 <- stars %>%\n  mutate_at(vars(-id, -grade, -software), ~ (.x - mean(.x)) / sd(.x))\n\nmodel_z <- lm(grade ~ Ask_For_Help + Interpretation + Self_Concept +\n                Teacher + Test + Worth,\n              data = zscores1)\n\nsummary(model_z)## \n## Call:\n## lm(formula = grade ~ Ask_For_Help + Interpretation + Self_Concept + \n##     Teacher + Test + Worth, data = zscores1)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -5.6127 -1.6329  0.0755  1.6458  4.8041 \n## \n## Coefficients:\n##                Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)     17.7400     0.3527  50.293  < 2e-16 ***\n## Ask_For_Help     0.3967     0.5393   0.736  0.46599    \n## Interpretation  -0.4405     0.5299  -0.831  0.41032    \n## Self_Concept    -1.8205     0.5679  -3.206  0.00254 ** \n## Teacher          0.3973     0.4206   0.945  0.35009    \n## Test            -0.6414     0.5480  -1.170  0.24827    \n## Worth            0.4092     0.5255   0.779  0.44044    \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 2.494 on 43 degrees of freedom\n## Multiple R-squared:  0.4024, Adjusted R-squared:  0.319 \n## F-statistic: 4.826 on 6 and 43 DF,  p-value: 0.0007612"},{"path":"multiple-regression.html","id":"compare-models","chapter":"2 Multiple Regression","heading":"2.3.6 Compare models","text":"just well predicting grades 'best' predictor including six subscale predictors? analysis test .Fit two models compare using anova()","code":"\n## we are doing it with the standardized scores;\n## could also do it using the unstandardized scores and would get the same result\nsc_only <- lm(grade ~ Self_Concept, zscores1)\n\nanova(sc_only, model_z)\n## no evidence for improvement by adding other 5 predictors!\n\nsummary(sc_only)## Analysis of Variance Table\n## \n## Model 1: grade ~ Self_Concept\n## Model 2: grade ~ Ask_For_Help + Interpretation + Self_Concept + Teacher + \n##     Test + Worth\n##   Res.Df    RSS Df Sum of Sq      F Pr(>F)\n## 1     48 293.72                           \n## 2     43 267.50  5    26.218 0.8429 0.5269\n## \n## Call:\n## lm(formula = grade ~ Self_Concept, data = zscores1)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -6.0394 -1.5570  0.1842  2.1283  4.5136 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)   17.7400     0.3498  50.710  < 2e-16 ***\n## Self_Concept  -1.7722     0.3534  -5.015 7.66e-06 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 2.474 on 48 degrees of freedom\n## Multiple R-squared:  0.3438, Adjusted R-squared:  0.3302 \n## F-statistic: 25.15 on 1 and 48 DF,  p-value: 7.658e-06"},{"path":"multiple-regression.html","id":"choice-of-software-and-grade","chapter":"2 Multiple Regression","heading":"2.3.7 Choice of software and grade","text":"Run simple regression predicts grades choice software (SPSS versus R).","code":"\nmodel_gxs <- lm(grade ~ software, stars)\n\nsummary(model_gxs)## \n## Call:\n## lm(formula = grade ~ software, data = stars)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -6.5000 -1.3235 -0.3235  2.2941  5.5000 \n## \n## Coefficients:\n##              Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)   18.3235     0.5021  36.493   <2e-16 ***\n## softwareSPSS  -1.8235     0.8876  -2.054   0.0454 *  \n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 2.928 on 48 degrees of freedom\n## Multiple R-squared:  0.08082,    Adjusted R-squared:  0.06168 \n## F-statistic: 4.221 on 1 and 48 DF,  p-value: 0.0454"},{"path":"interactions.html","id":"interactions","chapter":"3 Interactions","heading":"3 Interactions","text":"","code":""},{"path":"interactions.html","id":"resources-1","chapter":"3 Interactions","heading":"3.1 Resources","text":"SlidesMy book chapter interactions provides -depth treatmentFactorial web app allows play around main effects interactions 2x2 factorial design","code":""},{"path":"interactions.html","id":"activities-1","chapter":"3 Interactions","heading":"3.2 Activities","text":"","code":""},{"path":"interactions.html","id":"categorical-by-continuous-interactions","chapter":"3 Interactions","heading":"3.2.1 Categorical-by-continuous interactions","text":"cat owners frugal dog owners? run study looking relationship age (AGE) net savings British pounds sterling (SAVE) dog versus cat owners (HAS_DOG: 0 = cat owner, 1 = dog owner). run multiple regression get following output (numbers made ):Answer following questions output.intercept regression line relating age savings cat owners (1 decimal place)?slope regression line relating age savings cat owners?much savings model predict 46-year-old cat owner?intercept regression line relating age savings dog owners?slope regression line relating age savings dog owners? (type value)much savings predict 18-year-old dog owner? (type value)True false: relationship age savings statistically different cat dog owners (\\(\\alpha = .05\\)).TRUEFALSEThe statement FALSE test null hypothesis interaction coefficient significant (p = .162).","code":"Call:\nlm(formula = SAVE ~ HAS_DOG * AGE, data = dat)\n\nCoefficients:\n            Estimate Std.Error t value    Pr(>|t|)\n(Intercept)   1043.3  58.28492   17.90 0.000000000\nHAS_DOG        -97.8 -48.17734    2.03 0.042356539\nAGE            165.9  53.51613    3.10 0.001935206\nHAS_DOG:AGE    -14.1 -10.07143    1.40 0.161513318\n1043.3 # the value of `(Intercept)`## [1] 1043.3\n165.9 # the value of the `AGE` coefficient## [1] 165.9\n1043.3 + 165.9 * 46 # = 8674.7\n1043.3 + (-97.8) # = 945.5\n165.9 + (-14.1) # = 151.8\n(1043.3 - 97.8) + (165.9 - 14.1) * 18 # = 3677.9"},{"path":"interactions.html","id":"categorical-by-categorical-interactions","chapter":"3 Interactions","heading":"3.2.2 Categorical-by-categorical interactions","text":"next questions, assume given population means measured without error.Note real data dealing sample means measured error rather population means. real data, just look cell means tell whether effect. may numerical difference, run inferential test see whether difference unlikely due chance.","code":""},{"path":"interactions.html","id":"dataset-1","chapter":"3 Interactions","heading":"3.2.2.1 Dataset 1","text":"Consider population cell means 2x2 factorial design.main effect ? TRUEFALSEFALSE. mean row A1 equal mean A2, therefore main effect .main effect B? TRUEFALSETRUE. mean column B1 equal mean column B2, therefore main effect B.AB interaction? TRUEFALSEThe simple effect B A1 83 - 77 = 6.simple effect B A2 also 83 - 77 = 6.simple effects , therefore interaction. (FALSE)","code":""},{"path":"interactions.html","id":"dataset-2","chapter":"3 Interactions","heading":"3.2.2.2 Dataset 2","text":"Consider population cell means 2x2 factorial design.main effect ? TRUEFALSEFALSE. mean row A1 equal mean A2, therefore main effect.main effect B? TRUEFALSEFALSE. mean column B1 equal mean column B2, therefore main effect.AB interaction? TRUEFALSEThe simple effect B A1 82 - 92 = -10.simple effect B A2 92 - 82 = +10.simple effects different, therefore interaction. (TRUE)","code":""},{"path":"interactions.html","id":"dataset-3","chapter":"3 Interactions","heading":"3.2.2.3 Dataset 3","text":"Consider population cell means 2x2 factorial design.main effect ? TRUEFALSETRUE. mean row A1 equal mean A2, therefore main effect.main effect B? TRUEFALSETRUE. mean column B1 equal mean column B2, therefore main effect.AB interaction? TRUEFALSEThe simple effect B A1 69 - 85 = -16.simple effect B A2 101 - 93 = 8.simple effects different, therefore interaction. (TRUE)","code":""},{"path":"interactions.html","id":"coding-categorical-predictors-in-regression","chapter":"3 Interactions","heading":"3.2.3 Coding categorical predictors in regression","text":"Imagine run study 2x3 design (two factors, one two levels one three levels). Copy code R session run create variable facdata session contains data hypothetical experiment.Now use simple linear regression test main effect , main effect B, AxB interaction, answer following questions.main effect signficant? TRUEFALSEIs main effect B significant? TRUEFALSEIs AxB interaction significant? TRUEFALSEmain effect : FALSEmain effect B: FALSEAxB interaction: TRUEHere's perform analysis.First, need deviation code (sum code) numeric predictor variables.Now fit base model predictors.Use model comparison test effects. First, main effect .Now main effect B.Finally, AxB interaction.","code":"\nlibrary(\"tidyverse\")\n\nfacdata <- tibble(A = rep(c(\"A1\", \"A2\"), each = 12),\n                  B = rep(rep(c(\"B1\", \"B2\", \"B3\"), each = 4), 2),\n                  Y = c(9, 8, 7, 9, 4, 3, 4, 3, 6, 5, 6, 6,\n                        4, 3, 4, 3, 9, 8, 7, 8, 5, 6, 6, 6))\nfacdev <- facdata %>%\n  mutate(Ad = if_else(A == \"A2\", 1/2, -1/2),\n         B2vB1 = if_else(B == \"B2\", 2/3, -1/3),\n         B3vB1 = if_else(B == \"B3\", 2/3, -1/3))\n\n## double check (important!)\nfacdev %>%\n  distinct(A, B, Ad, B2vB1, B3vB1)## # A tibble: 6 × 5\n##   A     B        Ad  B2vB1  B3vB1\n##   <chr> <chr> <dbl>  <dbl>  <dbl>\n## 1 A1    B1     -0.5 -0.333 -0.333\n## 2 A1    B2     -0.5  0.667 -0.333\n## 3 A1    B3     -0.5 -0.333  0.667\n## 4 A2    B1      0.5 -0.333 -0.333\n## 5 A2    B2      0.5  0.667 -0.333\n## 6 A2    B3      0.5 -0.333  0.667\n## fit a model\nmod <- lm(Y ~ (B2vB1 + B3vB1) * Ad, facdev)\n\nsummary(mod)## \n## Call:\n## lm(formula = Y ~ (B2vB1 + B3vB1) * Ad, data = facdev)\n## \n## Residuals:\n##    Min     1Q Median     3Q    Max \n##  -1.25  -0.50   0.25   0.50   1.00 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept)  5.79167    0.13819  41.910  < 2e-16 ***\n## B2vB1       -0.12500    0.33850  -0.369    0.716    \n## B3vB1       -0.12500    0.33850  -0.369    0.716    \n## Ad          -0.08333    0.27639  -0.302    0.766    \n## B2vB1:Ad     9.25000    0.67700  13.663 6.08e-11 ***\n## B3vB1:Ad     4.75000    0.67700   7.016 1.51e-06 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 0.677 on 18 degrees of freedom\n## Multiple R-squared:  0.9122, Adjusted R-squared:  0.8878 \n## F-statistic:  37.4 on 5 and 18 DF,  p-value: 6.764e-09\nmod_noA <- update(mod, . ~ . -Ad)\n\nanova(mod, mod_noA)## Analysis of Variance Table\n## \n## Model 1: Y ~ (B2vB1 + B3vB1) * Ad\n## Model 2: Y ~ B2vB1 + B3vB1 + B2vB1:Ad + B3vB1:Ad\n##   Res.Df    RSS Df Sum of Sq      F Pr(>F)\n## 1     18 8.2500                           \n## 2     19 8.2917 -1 -0.041667 0.0909 0.7665\nmod_noB <- update(mod, . ~ . -B2vB1 -B3vB1)\n\nanova(mod, mod_noB)## Analysis of Variance Table\n## \n## Model 1: Y ~ (B2vB1 + B3vB1) * Ad\n## Model 2: Y ~ Ad + B2vB1:Ad + B3vB1:Ad\n##   Res.Df    RSS Df Sum of Sq      F Pr(>F)\n## 1     18 8.2500                           \n## 2     20 8.3333 -2 -0.083333 0.0909 0.9135\nmod_noAB <- update(mod, . ~ . -B2vB1:Ad -B3vB1:Ad)\n\nanova(mod, mod_noAB)## Analysis of Variance Table\n## \n## Model 1: Y ~ (B2vB1 + B3vB1) * Ad\n## Model 2: Y ~ B2vB1 + B3vB1 + Ad\n##   Res.Df    RSS Df Sum of Sq      F   Pr(>F)    \n## 1     18  8.250                                 \n## 2     20 93.833 -2   -85.583 93.364 3.14e-10 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"modeling-trends.html","id":"modeling-trends","chapter":"4 Modeling trends","heading":"4 Modeling trends","text":"","code":""},{"path":"modeling-trends.html","id":"resources-2","chapter":"4 Modeling trends","heading":"4.1 Resources","text":"Slides","code":""},{"path":"modeling-trends.html","id":"activity-1","chapter":"4 Modeling trends","heading":"4.2 Activity","text":"","code":""},{"path":"modeling-trends.html","id":"testing-for-a-difference-in-time-varying-pattern-across-two-groups","chapter":"4 Modeling trends","heading":"4.2.1 Testing for a difference in time-varying pattern across two groups","text":"(made ) data , longitudinal data two groups, B, show quadratic trend time. data R binary file quadratic.rds.downloaded file put working directory, can load data using:task: Using single model, fit quadradic functions groups, orthogonal polynomials.Tip: Use following 'hack' add polynomial predictors tibble. (just example toy dataset, need adapt code purposes).Note: probably want deviation sum code categorical predictor, reasons mentioned last section interactions.Need help building data? first part solution.Now fit model, compare result solution .Extra: wanted simultaneously test whether time-varying (linear, quadradic) components differed across groups (single p-value), ?Advanced: plot data along model predictions two groups.Hint: fitted()","code":"\nlibrary(\"tidyverse\")\n\nqdata <- readRDS(\"quadratic.rds\")\n## make some toy data\ndat <- tibble(time = 1:20,\n              Y = rnorm(20))\n\n## matrix of polynomial predictors\nmx <- poly(dat$time, degree = 2, simple=TRUE)\n\n## add using mutate()\ndat2 <- dat %>%\n  mutate(t1 = mx[, 1], # first column\n         t2 = mx[, 2]) # second column\nmx <- poly(qdata$time, degree=2, simple=TRUE)\n\nqdata2 <- qdata %>%\n  mutate(grp = if_else(group == \"B\", 1/2, -1/2),\n         t1 = mx[, 1],\n         t2 = mx[, 2])         \nmod <- lm(response ~ (t1 + t2) * grp, data = qdata2)\n\nsummary(mod)## \n## Call:\n## lm(formula = response ~ (t1 + t2) * grp, data = qdata2)\n## \n## Residuals:\n##    Min     1Q Median     3Q    Max \n## -3.877 -1.208 -0.076  1.137  5.037 \n## \n## Coefficients:\n##               Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) 303.146840   0.317951 953.440  < 2e-16 ***\n## t1           -3.447607   2.010897  -1.714   0.0955 .  \n## t2           12.970600   2.010897   6.450 2.26e-07 ***\n## grp          -0.006512   0.635901  -0.010   0.9919    \n## t1:grp      -35.307246   4.021794  -8.779 2.93e-10 ***\n## t2:grp      -31.987768   4.021794  -7.954 2.89e-09 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 2.011 on 34 degrees of freedom\n## Multiple R-squared:  0.8447, Adjusted R-squared:  0.8218 \n## F-statistic: 36.97 on 5 and 34 DF,  p-value: 8.254e-13\nmod2 <- update(mod, . ~ . -t1:grp -t2:grp)\n\nanova(mod, mod2)## Analysis of Variance Table\n## \n## Model 1: response ~ (t1 + t2) * grp\n## Model 2: response ~ t1 + t2 + grp\n##   Res.Df    RSS Df Sum of Sq      F    Pr(>F)    \n## 1     34 137.49                                  \n## 2     36 704.94 -2   -567.45 70.165 8.547e-13 ***\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nggplot(qdata, aes(time, response)) +\n  geom_point(aes(color = group, shape=group))\nqdata3 <- qdata2 %>%\n  mutate(fitted = fitted(mod))\n\nggplot(qdata, aes(time, response)) +\n  geom_point(aes(color = group, shape=group)) +\n  geom_line(data = qdata3, aes(y = fitted, color = group))"},{"path":"variance-covariance-matrices.html","id":"variance-covariance-matrices","chapter":"5 Variance-covariance matrices","heading":"5 Variance-covariance matrices","text":"","code":""},{"path":"variance-covariance-matrices.html","id":"resources-3","chapter":"5 Variance-covariance matrices","heading":"5.1 Resources","text":"SlidesBivariate distributions appNote \"code\" pane app shows code need simulated data desired properties. useful data simulation activity .book chapter correlation goes topic depth, including discussion relationship correlation regression.","code":""},{"path":"variance-covariance-matrices.html","id":"activities-2","chapter":"5 Variance-covariance matrices","heading":"5.2 Activities","text":"Play around app confident interpreting variance-covariance matrices.","code":""},{"path":"variance-covariance-matrices.html","id":"simulating-data-from-covariance-matrices","chapter":"5 Variance-covariance matrices","heading":"5.2.1 Simulating data from covariance matrices","text":"simulation exercises call upon function mvrnorm() MASS package. See \"code\" pane first web app page example code. might want step encountered matrix() function . matrix() function byrow option allows enter data row--row instead column--column (default), makes life easier.WATCH ! Always use MASS::mvrnorm() without loading library(\"MASS\").MASS package comes pre-installed R. function probably ever want use MASS mvrnorm(), rather load package using library(\"MASS\"), preferable use MASS::mvrnorm(), especially MASS dplyr package tidyverse play well together, due packages function select(). load MASS load tidyverse, end getting MASS version select() instead dplyr version. head trying debug code.","code":""},{"path":"variance-covariance-matrices.html","id":"a-2x2-matrix","chapter":"5 Variance-covariance matrices","heading":"5.2.1.1 A 2x2 matrix","text":"Simulate 12 observations 2x2 matrix variables X Y following parameter values:\\(\\mu_X = -3.5\\); \\(\\mu_Y = 57\\);\\(\\sigma_X = 9\\);\\(\\sigma_Y = 11\\);\\(\\rho_{XY} = -.24\\).","code":"\ncov_xy <- -.24 * 9 * 11\nmx1 <- matrix(c(9^2,    cov_xy,\n                cov_xy, 11^2),\n              nrow = 2, byrow=TRUE)\n\nset.seed(62)\nMASS::mvrnorm(12, mu = c(X = -3.5, Y = 57), mx1)##                X        Y\n##  [1,]  -9.814510 64.21756\n##  [2,]   6.855451 65.42452\n##  [3,]  11.215571 44.67337\n##  [4,]  -3.521887 57.93585\n##  [5,] -22.805532 76.67087\n##  [6,]  -8.682815 55.37389\n##  [7,] -16.711472 62.43408\n##  [8,]   3.123118 44.84744\n##  [9,]   6.588177 62.92306\n## [10,]  -6.436933 43.12737\n## [11,]  -5.181376 44.23210\n## [12,] -18.449782 63.56265"},{"path":"variance-covariance-matrices.html","id":"a-4x4-matrix","chapter":"5 Variance-covariance matrices","heading":"5.2.1.2 A 4x4 matrix","text":"4x4 covariance matrix variables W, X, Y, Z following structure.\\[\n\\begin{pmatrix}\n{\\sigma_w}^2              & \\rho_{wx} \\sigma_w\\sigma_x & \\rho_{wy}\\sigma_w\\sigma_y & \\rho_{wz}\\sigma_w\\sigma_z \\\\\n\\rho_{xw}\\sigma_x\\sigma_w & {\\sigma_x}^2 & \\rho_{xy}\\sigma_x\\sigma_y & \\rho_{xz}\\sigma_x\\sigma_z \\\\\n\\rho_{yw}\\sigma_y\\sigma_w & \\rho_{yx}\\sigma_y\\sigma_x & {\\sigma_y}^2 & \\rho_{yz}\\sigma_y\\sigma_z \\\\\n\\rho_{zw}\\sigma_z\\sigma_w & \\rho_{zx}\\sigma_z\\sigma_x & \\rho_{zy}\\sigma_z\\sigma_y & {\\sigma_z}^2 \\\\\n\\end{pmatrix}\n\\]Simulate 10 observations 4x4 matrix variables W, X, Y, Z following parameter values:\\(\\mu_W = 5\\); \\(\\mu_X = -7\\); \\(\\mu_Y = 40\\); \\(\\mu_Z = -99\\)\\(\\sigma_W = 2.64\\);\\(\\sigma_X = 1.93\\);\\(\\sigma_Y = 2.10\\);\\(\\sigma_Z = 2.92\\);\\(\\rho_{WX} = .39\\);\\(\\rho_{WY} = -.45\\);\\(\\rho_{WZ} = -.08\\);\\(\\rho_{XY} = -.03\\);\\(\\rho_{XZ} = .17\\);\\(\\rho_{YZ} = -.23\\);","code":"\n## It might be easiest to create variables representing the variances\n## and covariances first and then reference them when building the matrix\nsw <- 2.64\nsx <- 1.63\ncwx <- cxw <- .39 * sw * sx\n## etc...\nsw <- 2.64\nsx <- 1.93\nsy <- 2.10\nsz <- 2.92\ncwx <- cxw <- .39 * sw * sx\ncwy <- cyw <- -.45 * sw * sy\ncwz <- czw <- -.08 * sw * sz\ncxy <- cyx <- -.40 * sx * sy\ncxz <- czx <- -.07 * sx * sz\ncyz <- czy <- -.23 * sy * sz\n\nmx2 <- matrix(c(sw^2, cwx,  cwy,  cwz,\n                cxw,  sx^2, cxy,  cxz,\n                cyw,  cyx,  sy^2, cyz,\n                czw,  czx,  czy,  sz^2),\n              nrow = 4, byrow = TRUE)\n\nset.seed(62)\nsimdata <- MASS::mvrnorm(10, mu = c(W = 5, X = -7, Y = 40, Z = -99), mx2)"},{"path":"variance-covariance-matrices.html","id":"converting-matrices-to-tibbles-and-combining-with-joins","chapter":"5 Variance-covariance matrices","heading":"5.2.2 Converting matrices to tibbles and combining with joins","text":"Now know simulate data multivariate normal distributions, important coding skill convert matrices tabular data combine information tables using inner_join(). call upon skills next activity, simulate random intercepts random slopes set participants combine trial data. just keep things simple can see general approach.First, convert matrix tibble, can just use as_tibble(). However, going combine matrix data another table, need 'key' column (participant ID) values table can appropriately matched. can add using mutate(), like . Finally combine information using join.Walk code step step make sure understand command .","code":"\n# need for as_tibble(), %>%, mutate(), row_number(), inner_join()\nlibrary(\"tidyverse\") \n\n## use the data from the 4x4 simulation above\n## (see solution for definition of simdata matrix)\nsimtbl <- as_tibble(simdata) %>%\n  mutate(id = row_number()) # the participant id (arbitrary)\n\n## create a table we need to join to with trial information\ntrials <- tibble(id = rep(1:10, each = 10),\n                 condition = rep(rep(c(\"test\", \"control\"), each = 5), 10))\n\n## now combine the information\ncombined <- inner_join(trials, simtbl, by = \"id\")\n\ncombined## # A tibble: 100 × 6\n##       id condition     W     X     Y     Z\n##    <int> <chr>     <dbl> <dbl> <dbl> <dbl>\n##  1     1 test       6.24 -3.06  39.6 -101.\n##  2     1 test       6.24 -3.06  39.6 -101.\n##  3     1 test       6.24 -3.06  39.6 -101.\n##  4     1 test       6.24 -3.06  39.6 -101.\n##  5     1 test       6.24 -3.06  39.6 -101.\n##  6     1 control    6.24 -3.06  39.6 -101.\n##  7     1 control    6.24 -3.06  39.6 -101.\n##  8     1 control    6.24 -3.06  39.6 -101.\n##  9     1 control    6.24 -3.06  39.6 -101.\n## 10     1 control    6.24 -3.06  39.6 -101.\n## # … with 90 more rows"},{"path":"linear-mixed-effects-models.html","id":"linear-mixed-effects-models","chapter":"6 Linear mixed-effects models","heading":"6 Linear mixed-effects models","text":"","code":""},{"path":"linear-mixed-effects-models.html","id":"resources-4","chapter":"6 Linear mixed-effects models","heading":"6.1 Resources","text":"SlidesMy book chapter contains -depth discussion links resources.web application allows simulate sleepstudy data adjust parameters compare complete pooling, pooling, partial pooling (mixed-effects) models.","code":""},{"path":"linear-mixed-effects-models.html","id":"activities-3","chapter":"6 Linear mixed-effects models","heading":"6.2 Activities","text":"","code":""},{"path":"linear-mixed-effects-models.html","id":"data-simulation","chapter":"6 Linear mixed-effects models","heading":"6.2.1 Data simulation","text":"general GLM sleepstudy data :\\[Y_{ij} = \\beta_0 + \\beta_1 X_{ij} + e_{ij}\\]\\[\\beta_0 = \\gamma_{00} + S_{0i}\\]\\[\\beta_1 = \\gamma_{10} + S_{1i}\\]\\[\\left< S_{0i}, S_{1i} \\right> \\sim N\\left(\\left<0, 0\\right>, \\mathbf \\Sigma\\right)\\]\\[\\mathbf\\Sigma = \\left(\\begin{array}{cc}{\\tau_{00}}^2 & \\rho\\tau_{00}\\tau_{11}\\\\\\rho\\tau_{00}\\tau_{11} & {\\tau_{11}}^2\\end{array}\\right)\\]\\[e_{ij} \\sim N(0, \\sigma^2).\\]part, making simulated sleepstudy data 18 subjects. parameter values reflect data-generating process :\\[Y_{ij} = \\beta_0 + \\beta_1 X_{ij} + e_{ij}\\]\n\\[\\beta_0 = 310 + S_{0i}\\]\n\\[\\beta_1 = 4 + S_{1i}\\]\n\\[\\left< S_{0i}, S_{1i} \\right> \\sim N\\left(\\left<0, 0\\right>, \\mathbf \\Sigma\\right)\\]\n\\[\\mathbf\\Sigma = \\left(\\begin{array}{cc}{30}^2\n& (0.9)(30)(33)\\\\\n(0.9)(30)(33) & \n{33}^2\\end{array}\\right)\\]\n\\[e_{ij} \\sim N(0, 25^2)\\\\\\]proceed three steps.Generate random effects (intercept slope offsets) 18 subjects bivariate normal distribution using parameter values variance components.Generate random effects (intercept slope offsets) 18 subjects bivariate normal distribution using parameter values variance components.Generate tibble containing fixed effects \\(\\gamma_{00}\\) \\(\\gamma_{10}\\), random noise according value \\(\\sigma^2\\).Generate tibble containing fixed effects \\(\\gamma_{00}\\) \\(\\gamma_{10}\\), random noise according value \\(\\sigma^2\\).Combine random effects generated part 1 fixed effects error generated part 2, calculate \\(Y\\) values according DGP.Combine random effects generated part 1 fixed effects error generated part 2, calculate \\(Y\\) values according DGP.Setting . Load tidyverse, lme4, set random number seed.","code":"\nlibrary(\"lme4\")\nlibrary(\"tidyverse\")\n\nset.seed(62)"},{"path":"linear-mixed-effects-models.html","id":"step-1-generate-random-effects","chapter":"6 Linear mixed-effects models","heading":"6.2.1.1 Step 1: Generate random effects","text":"need generate data matrix called rmx, first column random intercepts \\(S_{0i}\\) second column random slopes \\(S_{1i}\\).Look back last chapter. need use matrix() MASS::mvrnorm().","code":"\ncovmx <- matrix(c(30^2, .9 * 30 * 33,\n                  .9 * 30 * 33, 33^2), ncol = 2)\n\n## 'rmx' should be an 18x2 matrix\nrmx <- MASS::mvrnorm(18, mu = c(S0i = 0, S1i = 0),\n                     Sigma = covmx)"},{"path":"linear-mixed-effects-models.html","id":"step-2-make-a-tibble-with-fixed-effects-and-random-error-noise","chapter":"6 Linear mixed-effects models","heading":"6.2.1.2 Step 2: Make a tibble with fixed effects and random error (noise)","text":"next chunk, make table containing values \\(\\gamma_{00}\\), \\(\\gamma_{10}\\), \\(e_{ij}\\).tibble 180 observations (18 subjects, observed 10 days). target table structure shown (values e_ij vary randomly generated).Something like: tibble(... e_ij = rnorm(...))","code":"## # A tibble: 180 × 5\n##    Subject  Days gamma_00 gamma_10    e_ij\n##    <fct>   <int>    <dbl>    <dbl>   <dbl>\n##  1 1           0      310        4  28.6  \n##  2 1           1      310        4 -20.0  \n##  3 1           2      310        4  17.8  \n##  4 1           3      310        4   0.363\n##  5 1           4      310        4  26.6  \n##  6 1           5      310        4  -4.06 \n##  7 1           6      310        4 -18.3  \n##  8 1           7      310        4   7.09 \n##  9 1           8      310        4  -4.84 \n## 10 1           9      310        4  38.7  \n## # … with 170 more rows\nobs <- tibble(Subject = factor(rep(seq_len(18), each = 10)),\n              Days = rep(0:9, 18),\n              gamma_00 = 310,  # replace with correct values\n              gamma_10 = 4,  # replace with correct values\n              e_ij = rnorm(18 * 10, 0, 25))      # replace with correct values"},{"path":"linear-mixed-effects-models.html","id":"step-3-combine","chapter":"6 Linear mixed-effects models","heading":"6.2.1.3 Step 3: Combine","text":"Now find way combine information obs table info rmx create table looks like sleepstudy table. (Hint: information end last chapter come handy.)resulting simdata table columns Reaction, Days, Subject. Hint: check simulated tables data multilevel web app.","code":"rmx_tbl <- as_tibble() %>%\n  mutate(??)\n\nsimdata <- inner_join(?, ?, \"?\") %>%\n  mutate(Reaction = .....??) %>%\n  select(...)\nrmx_tbl <- rmx %>%\n  as_tibble() %>%\n  mutate(Subject = factor(1:18))\n\nsimdata <- inner_join(obs, rmx_tbl, \"Subject\") %>%\n  mutate(Reaction = gamma_00 + S0i + (gamma_10 + S1i) * Days + e_ij) %>%\n  select(Subject, Days, Reaction)\n\nsimdata## # A tibble: 180 × 3\n##    Subject  Days Reaction\n##    <fct>   <int>    <dbl>\n##  1 1           0     353.\n##  2 1           1     342.\n##  3 1           2     418.\n##  4 1           3     438.\n##  5 1           4     502.\n##  6 1           5     509.\n##  7 1           6     532.\n##  8 1           7     595.\n##  9 1           8     621.\n## 10 1           9     702.\n## # … with 170 more rows"},{"path":"linear-mixed-effects-models.html","id":"estimate-the-model","chapter":"6 Linear mixed-effects models","heading":"6.2.2 Estimate the model","text":"Now going try recover original population parameters sample. see close get.Just working data, work different data simdata2 need download, place working directory, import using code .Now use lmer() function lme4 estimate population parameters simdata2. Print results using summary().Now identify estimates DGP output. Type values (rounded one decimal point).","code":"\nsimdata2 <- readRDS(\"simdata2.rds\")\nsleepmod <- lmer(Reaction ~ Days + (Days | Subject),\n                 data = simdata2)\n\nsummary(sleepmod)## Linear mixed model fit by REML ['lmerMod']\n## Formula: Reaction ~ Days + (Days | Subject)\n##    Data: simdata2\n## \n## REML criterion at convergence: 1799.1\n## \n## Scaled residuals: \n##      Min       1Q   Median       3Q      Max \n## -2.51460 -0.59435 -0.01494  0.60344  2.43897 \n## \n## Random effects:\n##  Groups   Name        Variance Std.Dev. Corr\n##  Subject  (Intercept)  984.1   31.37        \n##           Days        1270.1   35.64    0.88\n##  Residual              680.9   26.09        \n## Number of obs: 180, groups:  Subject, 18\n## \n## Fixed effects:\n##             Estimate Std. Error t value\n## (Intercept)  306.741      8.231  37.268\n## Days           5.493      8.427   0.652\n## \n## Correlation of Fixed Effects:\n##      (Intr)\n## Days 0.757"},{"path":"random-effects-structure.html","id":"random-effects-structure","chapter":"7 Random effects structure","heading":"7 Random effects structure","text":"","code":""},{"path":"random-effects-structure.html","id":"resources-5","chapter":"7 Random effects structure","heading":"7.1 Resources","text":"SlidesCrossed web app demonstrating random effects simple crossed design","code":""},{"path":"random-effects-structure.html","id":"maximal-random-effects","chapter":"7 Random effects structure","heading":"7.2 Maximal random effects","text":"first part, load datasets created . task inspect data write formula corresponding 'maximal' random effects structure.Download following files place working directory.fdata1.rdsfdata2.rdsfdata3.rdsfdata4.rdsThen load usingThe dataset fdata1 factorial experiment design factors C, E, W dependent variable rtime. Individual subjects identified variable subject_id.Type lme4::lmer() model formula use analyze data maximal random effects (just formula, e.g., Y ~ Z + (Z | id), full lmer() call).need create numeric predictors use formula. Just use C, E, W .dataset fdata2 factorial experiment design factors J, T, W dependent variable depvar. Individual subjects identified variable subject_id.Type lme4::lmer() model formula use analyze data maximal random effects.dataset fdata3 factorial experiment independent variables B, P, U dependent variable rtime. design includes crossed random factors subjects stimuli, subjects identified variable subject_id, stimuli variable stim_id.Type lme4::lmer() model formula use analyze data maximal random effects.dataset fdata4 factorial experiment independent variables G, L, T dependent variable rtime. design includes crossed random factors subjects stimuli, subjects identified variable sub_id, stimuli variable stm_id.Type lme4::lmer() model formula use analyze data maximal random effects.","code":"\nlibrary(\"tidyverse\")\n\nfdata1 <- readRDS(\"fdata1.rds\")\nfdata2 <- readRDS(\"fdata2.rds\")\nfdata3 <- readRDS(\"fdata3.rds\")\nfdata4 <- readRDS(\"fdata4.rds\")\nrtime ~ C * E * W + (C * E * W | subject_id)\ndepvar ~ J * T * W + (W | subject_id)\nrtime ~ B * P * U + (B * U | subject_id) + (P | stim_id)\nrtime ~ G * L * T + (1 | sub_id) + (L | stm_id)"},{"path":"random-effects-structure.html","id":"re-analysis-of-keysar-barr-balin-brauner-experiment-2","chapter":"7 Random effects structure","heading":"7.3 Re-analysis of Keysar, Barr, Balin & Brauner, Experiment 2","text":"task, re-analyzing data Experiment 2 paper:Keysar, B., Barr, D. J., Balin, J. . & Brauner, J. S. (2000). Taking Perspective Conversation: Role Mutual Knowledge Comprehension. Psychological Science, 11, 32--38.view basic experimental taskThis experiment examined perspective taking conversation. experiment, participants (\"addressees\") sat across confederate director instructed move objects around grid placed eyes tracked. example, director might say, \"move truck one space .\" grid contained objects hidden director's view. experiment structured director occasionally refer mutually visible object (\"move small candle...\") way also happen match \"competitor\" object visible (presumably unknown director). main \"experimental\" condition study (cond = E). control condition (cond = C), competitor object replaced something match description (e.g., apple). experiment previous established hidden competitor produced \"egocentric interference\" delayed interpretation.current experiment (Experiment 2), question whether \"source\" hidden objects mattered. one condition (psource = EX) experimenter gave participants objects hide. another condition (psource = RN), participants drew numbers bag, believing random lottery determined objects went hidden spaces.Thus, experiment 2 (source, EX RN) 2 (condition, E C) design. experiment crossed random factors subject (subj) stimulus (object), analyzed using separate -subjects -items analysis. task re-analyze analyses DVs firstfix rt using linear mixed-effects model appropriately specified random effects subjects ('subj') stimuli (object).Make new working directory, download R binary (.rds) file kbbb_2000.rds, place directory. Start new R script (RMarkdown script) save working directory along data.top script, type following lines set session (might want restart R ):look tibble kbbb. description fields .DVs analyze firstfix.point , . peek solution given best shot. Good luck!First fixation analysis(Note: good idea plot data analysis well, make factorial plot)Check random effects structure, subject.Need -subject random slope cond.Check random effects structure, stimulus.Need -stimulus random slopes psource, cond, interaction.Now ready fit model","code":"\nlibrary(\"lme4\")\nlibrary(\"tidyverse\")\n\nkbbb <- readRDS(\"kbbb_2000.rds\")\n## make deviation-coded predictors\nkbbb2 <- kbbb %>%\n  mutate(C = if_else(cond == \"E\", .5, -.5),\n         PS = if_else(psource == \"EX\", .5, -.5))\n\n## double check\nkbbb2 %>%\n  count(cond, psource, C, PS)## # A tibble: 4 × 5\n##   cond  psource     C    PS     n\n##   <chr> <chr>   <dbl> <dbl> <int>\n## 1 C     EX       -0.5   0.5   100\n## 2 C     RN       -0.5  -0.5   100\n## 3 E     EX        0.5   0.5   100\n## 4 E     RN        0.5  -0.5   100\n## just get some descriptive stats\nff_means <- kbbb2 %>%\n  group_by(psource, cond) %>%\n  summarise(m = mean(firstfix, na.rm = TRUE), \n            sd = sd(firstfix, na.rm = TRUE),\n            .groups = \"drop\")\n\nff_means## # A tibble: 4 × 4\n##   psource cond      m    sd\n##   <chr>   <chr> <dbl> <dbl>\n## 1 EX      C     1764. 1386.\n## 2 EX      E     2907. 3312.\n## 3 RN      C     1796. 1459.\n## 4 RN      E     2743. 3513.\nggplot(ff_means, aes(cond, m, colour = psource)) +\n  geom_point(aes(shape = psource), size = 4) +\n  geom_line(aes(group = psource))\nkbbb2 %>%\n  count(subj, psource, cond)## # A tibble: 80 × 4\n##    subj  psource cond      n\n##    <fct> <chr>   <chr> <int>\n##  1 S01   EX      C         5\n##  2 S01   EX      E         5\n##  3 S02   EX      C         5\n##  4 S02   EX      E         5\n##  5 S04   RN      C         5\n##  6 S04   RN      E         5\n##  7 S05   RN      C         5\n##  8 S05   RN      E         5\n##  9 S06   EX      C         5\n## 10 S06   EX      E         5\n## # … with 70 more rows\nkbbb2 %>%\n  count(object, psource, cond)## # A tibble: 40 × 4\n##    object psource cond      n\n##    <fct>  <chr>   <chr> <int>\n##  1 blkpen EX      C        10\n##  2 blkpen EX      E        10\n##  3 blkpen RN      C        10\n##  4 blkpen RN      E        10\n##  5 brush  EX      C        10\n##  6 brush  EX      E        10\n##  7 brush  RN      C        10\n##  8 brush  RN      E        10\n##  9 cards  EX      C        10\n## 10 cards  EX      E        10\n## # … with 30 more rows\nff_mod <- lmer(firstfix ~ PS * C + (C | subj) + (PS * C | object), kbbb2,\n               REML = FALSE) # for model comparison## boundary (singular) fit: see ?isSingular\n## we get boundary (singular) fit: see ?isSingular\n## look at the results and see if we should simplify\nsummary(ff_mod) %>% print(corr = FALSE)## Linear mixed model fit by maximum likelihood  ['lmerMod']\n## Formula: firstfix ~ PS * C + (C | subj) + (PS * C | object)\n##    Data: kbbb2\n## \n##      AIC      BIC   logLik deviance df.resid \n##   7304.8   7376.5  -3634.4   7268.8      379 \n## \n## Scaled residuals: \n##     Min      1Q  Median      3Q     Max \n## -2.7730 -0.4516 -0.1774  0.3196  7.3645 \n## \n## Random effects:\n##  Groups   Name        Variance Std.Dev. Corr          \n##  subj     (Intercept)  530742   728.5                 \n##           C           1240695  1113.9   1.00          \n##  object   (Intercept) 1155440  1074.9                 \n##           PS           241786   491.7   1.00          \n##           C           1509593  1228.7   1.00 1.00     \n##           PS:C         135976   368.7   1.00 1.00 1.00\n##  Residual             4408338  2099.6                 \n## Number of obs: 397, groups:  subj, 40; object, 10\n## \n## Fixed effects:\n##             Estimate Std. Error t value\n## (Intercept)   2300.9      374.1   6.151\n## PS              65.2      348.8   0.187\n## C             1049.0      475.8   2.205\n## PS:C           197.3      561.6   0.351\n## optimizer (nloptwrap) convergence code: 0 (OK)\n## boundary (singular) fit: see ?isSingular\nff_mod2 <- lmer(firstfix ~ PS * C + (C || subj) + (PS * C || object), kbbb2,\n               REML = FALSE) # for model comparison## boundary (singular) fit: see ?isSingular\n## still, boundary (singular) fit: see ?isSingular\n## look at the results and see if we should simplify\nsummary(ff_mod2) %>% print(corr = FALSE)## Linear mixed model fit by maximum likelihood  ['lmerMod']\n## Formula: firstfix ~ PS * C + ((1 | subj) + (0 + C | subj)) + ((1 | object) +  \n##     (0 + PS | object) + (0 + C | object) + (0 + PS:C | object))\n##    Data: kbbb2\n## \n##      AIC      BIC   logLik deviance df.resid \n##   7332.4   7376.2  -3655.2   7310.4      386 \n## \n## Scaled residuals: \n##     Min      1Q  Median      3Q     Max \n## -2.5222 -0.4645 -0.1832  0.2605  7.7264 \n## \n## Random effects:\n##  Groups   Name        Variance Std.Dev.\n##  subj     (Intercept)  397373   630.4  \n##  subj.1   C            474525   688.9  \n##  object   (Intercept) 1102159  1049.8  \n##  object.1 PS            59018   242.9  \n##  object.2 C           1113391  1055.2  \n##  object.3 PS:C              0     0.0  \n##  Residual             4917572  2217.6  \n## Number of obs: 397, groups:  subj, 40; object, 10\n## \n## Fixed effects:\n##             Estimate Std. Error t value\n## (Intercept)  2301.52     364.07   6.322\n## PS             66.24     308.59   0.215\n## C            1047.79     415.68   2.521\n## PS:C          195.19     495.80   0.394\n## optimizer (nloptwrap) convergence code: 0 (OK)\n## boundary (singular) fit: see ?isSingular\nff_mod3 <- lmer(firstfix ~ PS * C + (C || subj) + (PS + C || object), kbbb2,\n               REML = FALSE) # for model comparison\n\nsummary(ff_mod3) %>% print(corr = FALSE)## Linear mixed model fit by maximum likelihood  ['lmerMod']\n## Formula: firstfix ~ PS * C + ((1 | subj) + (0 + C | subj)) + ((1 | object) +  \n##     (0 + PS | object) + (0 + C | object))\n##    Data: kbbb2\n## \n##      AIC      BIC   logLik deviance df.resid \n##   7330.4   7370.3  -3655.2   7310.4      387 \n## \n## Scaled residuals: \n##     Min      1Q  Median      3Q     Max \n## -2.5222 -0.4645 -0.1832  0.2605  7.7265 \n## \n## Random effects:\n##  Groups   Name        Variance Std.Dev.\n##  subj     (Intercept)  397383   630.4  \n##  subj.1   C            474304   688.7  \n##  object   (Intercept) 1101968  1049.7  \n##  object.1 PS            59073   243.0  \n##  object.2 C           1113742  1055.3  \n##  Residual             4917593  2217.6  \n## Number of obs: 397, groups:  subj, 40; object, 10\n## \n## Fixed effects:\n##             Estimate Std. Error t value\n## (Intercept)  2301.52     364.04   6.322\n## PS             66.24     308.60   0.215\n## C            1047.79     415.72   2.520\n## PS:C          195.19     495.78   0.394\nff_mod_PS <- update(ff_mod3, . ~ . -PS)\nff_mod_C <- update(ff_mod3, . ~ . -C)\nff_mod_PSC <- update(ff_mod3, . ~ . -PS:C)\n\n## test of main effect of PS\nanova(ff_mod_PS, ff_mod3)\n\n## test of main effect of C\nanova(ff_mod_C, ff_mod3)\n\n## test of PS:C interaction\nanova(ff_mod_PSC, ff_mod3)## Data: kbbb2\n## Models:\n## ff_mod_PS: firstfix ~ C + (1 | subj) + (0 + C | subj) + (1 | object) + (0 + PS | object) + (0 + C | object) + PS:C\n## ff_mod3: firstfix ~ PS * C + ((1 | subj) + (0 + C | subj)) + ((1 | object) + (0 + PS | object) + (0 + C | object))\n##           npar    AIC    BIC  logLik deviance Chisq Df Pr(>Chisq)\n## ff_mod_PS    9 7328.5 7364.3 -3655.2   7310.5                    \n## ff_mod3     10 7330.4 7370.3 -3655.2   7310.4 0.046  1     0.8302\n## Data: kbbb2\n## Models:\n## ff_mod_C: firstfix ~ PS + (1 | subj) + (0 + C | subj) + (1 | object) + (0 + PS | object) + (0 + C | object) + PS:C\n## ff_mod3: firstfix ~ PS * C + ((1 | subj) + (0 + C | subj)) + ((1 | object) + (0 + PS | object) + (0 + C | object))\n##          npar    AIC    BIC  logLik deviance  Chisq Df Pr(>Chisq)  \n## ff_mod_C    9 7333.4 7369.3 -3657.7   7315.4                       \n## ff_mod3    10 7330.4 7370.3 -3655.2   7310.4 4.9974  1    0.02539 *\n## ---\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## Data: kbbb2\n## Models:\n## ff_mod_PSC: firstfix ~ PS + C + (1 | subj) + (0 + C | subj) + (1 | object) + (0 + PS | object) + (0 + C | object)\n## ff_mod3: firstfix ~ PS * C + ((1 | subj) + (0 + C | subj)) + ((1 | object) + (0 + PS | object) + (0 + C | object))\n##            npar    AIC    BIC  logLik deviance  Chisq Df Pr(>Chisq)\n## ff_mod_PSC    9 7328.6 7364.4 -3655.3   7310.6                     \n## ff_mod3      10 7330.4 7370.3 -3655.2   7310.4 0.1547  1     0.6941"},{"path":"going-further.html","id":"going-further","chapter":"8 Going further","heading":"8 Going further","text":"slides giving brief overview generalized linear mixed effects models (GLMMs), generalized additive mixed models (GAMMs), generalized life hacks.leave, sure check suggestions reading Appendix C! download offline copy materials safekeeping! Godspeed!","code":""},{"path":"installing-and-configuring-rrstudio.html","id":"installing-and-configuring-rrstudio","chapter":"A Installing and Configuring R/RStudio","heading":"A Installing and Configuring R/RStudio","text":"course, developing scripts R programming language using RStudio Desktop Integrated Development Environment. document provides instructions installing R RStudio laptop. older versions applications already installed, please perform fresh installs latest versions (time writing, R 4.0.3 RStudio Desktop 1.4.1103).applications installed working, also need install additional packages add functionality base install.","code":""},{"path":"installing-and-configuring-rrstudio.html","id":"what-is-r","chapter":"A Installing and Configuring R/RStudio","heading":"A.1 What is R?","text":"R programming environment data analysis developed almost two decades ago, longer history derivative language scripting language S-PLUS developed Bell Labs 70s 80s.“Base R” interactive mode consists “Read Evaluate Print Loop” (REPL) command interpreter, type text commands, evaluated, results printed screen. “R Console” window looks something like .can access functionality R interactively typing commands console, far convenient interact R Integrated Development Environment, RStudio.","code":""},{"path":"installing-and-configuring-rrstudio.html","id":"the-rstudio-integrated-development-environment-ide","chapter":"A Installing and Configuring R/RStudio","heading":"A.2 The RStudio Integrated Development Environment (IDE)","text":"developing script, generally type text editor send commands type console, rather typing commands directly console. RStudio Desktop IDE integrated R console offers additional functionality helps write code accurately efficiently. IDEs available, including Jupyter notebooks emacs org-mode, users---especially, novices---RStudio best option.","code":""},{"path":"installing-and-configuring-rrstudio.html","id":"install","chapter":"A Installing and Configuring R/RStudio","heading":"A.3 Installation","text":"installing three things:Base R (RTools Windows user)RStudio Desktop IDEAdd-packages RInstalling R RStudio fairly easy. sections explain .","code":""},{"path":"installing-and-configuring-rrstudio.html","id":"installing-base-r","chapter":"A Installing and Configuring R/RStudio","heading":"A.3.1 1. Installing Base R","text":"Go https://cloud.r-project.org/ choose \ndownload link operating system (Linux, Mac OS X, Windows)\ninstall ‘base’ binaries distribution. using Linux\nMac OS, done; skip next section RStudio.installing Windows, install R, \nalso install RTools. Click \n‘recommended’ (experimental) version near top list (Rtools35.exe \ntime writing).","code":""},{"path":"installing-and-configuring-rrstudio.html","id":"installing-rstudio-desktop","chapter":"A Installing and Configuring R/RStudio","heading":"A.3.2 2. Installing RStudio Desktop","text":"install RStudio Desktop IDE successfully installed base R. Go https://www.rstudio.com/products/rstudio/download/#download heading \"Installers Supported Platforms\" download version operating system.","code":""},{"path":"installing-and-configuring-rrstudio.html","id":"launch-rstudio","chapter":"A Installing and Configuring R/RStudio","heading":"A.3.2.1 Launch RStudio","text":"installation, icons RStudio “R commander” system. R Commander primitive IDE comes packaged R. use ; always use RStudio.Make sure launch RStudio IDE R commander clicking correct icon. Launching RStudio also launch R console, appear embedded window pane within application.installation successful, launch RStudio, see screen looks like :Screenshot RStudio IDE","code":""},{"path":"installing-and-configuring-rrstudio.html","id":"installing-add-on-packages","chapter":"A Installing and Configuring R/RStudio","heading":"A.3.3 3. Installing add-on packages","text":"large number add-packages add additional functionality R. take step step process.install packages, going type commands R console window. console part RStudio IDE looks like :cursor just next caret > symbol bottom type commands.","code":""},{"path":"installing-and-configuring-rrstudio.html","id":"install-the-tidyverse","chapter":"A Installing and Configuring R/RStudio","heading":"A.3.3.1 Install the tidyverse","text":"first thing install tidyverse. tidyverse actually meta-package---collection packages---useful data processing visualization. Depending speed computer, might take minutes maybe even 10 minutes install process complete.install tidyverse, type following code console press return.first download packages, see lot text fly looks like :perfectly normal behavior. packages compiled source, download, lot gibberish appear screen. , perfectly normal cause panic. example gibberish looks like:package installs successfully, see text looks like :Hopefully, none packages result errors returned caret > prompt. get errors happens, can help diagnose problems first morning arrival.want learn packages included tidyverse , check http://www.tidyverse.org.","code":"\ninstall.packages(\"tidyverse\")trying URL 'https://cloud.r-project.org/src/contrib/packagename_X.XX.tar.gz'\nContent type 'application/x-gzip' length 3146818 bytes (3.0 MB)\n==================================================\ndownloaded 3.0 MB/home/dalebarr/R/x86_64-pc-linux-gnu-library/3.4/TMB/include/atomic_math.hpp:426:1:   required from ‘void atomic::matmul(const CppAD::vector<Type>&, CppAD::vector<Type>&) [with Double = double]’\n/home/dalebarr/R/x86_64-pc-linux-gnu-library/3.4/TMB/include/atomic_math.hpp:426:1:   required from ‘bool atomic::atomicmatmul<Type>::forward(size_t, size_t, const CppAD::vector<bool>&, CppAD::vector<bool>&, const CppAD::vector<Type>&, CppAD::vector<Type>&) [with Type = double; size_t = long unsigned int]’\nglmmTMB.cpp:863:1:   required from here* installing *source* package ‘dplyr’ ...\n** package ‘dplyr’ successfully unpacked and MD5 sums checked\n** R\n** inst\n** preparing package for lazy loading\n** help\n*** installing help indices\n** building package indices\n** testing if installed package can be loaded\n* DONE (dplyr)"},{"path":"installing-and-configuring-rrstudio.html","id":"install-additional-packages","chapter":"A Installing and Configuring R/RStudio","heading":"A.3.3.2 Install additional packages","text":"also need package lme4 provides functions mixed-effects modeling.probably take minutes complete, see lots gibberish appear console package installs.","code":"\ninstall.packages(\"lme4\")"},{"path":"installing-and-configuring-rrstudio.html","id":"optional-install-rmarkdown-and-related-packages","chapter":"A Installing and Configuring R/RStudio","heading":"A.3.3.3 (Optional) Install RMarkdown and related packages","text":"completing exercises, useful create files can compiled dynamic reports using RMarkdown, text-based format integrating code, text, graphics.easiest way install packages need just create new RMarkdown document, RStudio prompt install packages required.pull menu, choose File -> New File -> RMarkdown... lead prompt install packages.installed, ready go!","code":""},{"path":"installing-and-configuring-rrstudio.html","id":"additional-tweaks-you-might-want-to-try","chapter":"A Installing and Configuring R/RStudio","heading":"A.4 Additional tweaks you might want to try","text":"installing R RStudio easy, might want tweak installation bit.","code":""},{"path":"installing-and-configuring-rrstudio.html","id":"changing-how-rstudio-looks","chapter":"A Installing and Configuring R/RStudio","heading":"A.4.1 Changing how RStudio looks","text":"appearance RStudio fully configurable. can try different options going Tools --> Global Options choosing Appearance icon. can choose bigger font change color theme. Express !","code":""},{"path":"installing-and-configuring-rrstudio.html","id":"compiling-pdf-reports","chapter":"A Installing and Configuring R/RStudio","heading":"A.4.2 Compiling PDF reports","text":"tweak bit harder completely optional. want able compile reports PDF, need install LaTeX typesetting system. Without additional tweak, able produce reports HTML PDF. various options, easiest probably TinyTeX: https://yihui.name/tinytex.","code":""},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"coding-in-r-with-the-rstudio-ide","chapter":"B Coding in R with the RStudio IDE","heading":"B Coding in R with the RStudio IDE","text":"","code":""},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"learning-objectives","chapter":"B Coding in R with the RStudio IDE","heading":"B.1 Learning objectives","text":"Understand R console components RStudio IDEAppropriately structure R scriptInstall add-packagesUse R calculatorUnderstand basic data types (integer, double, character, factor)Create vectors store values variablesUnderstand vectorized operationsCall functions supply argumentsString together operations using pipesLoad data CSV Excel filesCreate simple data frame handCreate compile Rmarkdown document","code":""},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"introduction","chapter":"B Coding in R with the RStudio IDE","heading":"B.2 Introduction","text":"","code":""},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"what-is-r-1","chapter":"B Coding in R with the RStudio IDE","heading":"B.2.1 What is R?","text":"programming environment data processing statistical analysisfree open-sourcecommunity supportedcontinually evolvingpromotes reproducible research","code":""},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"interacting-with-r","chapter":"B Coding in R with the RStudio IDE","heading":"B.2.2 Interacting with R","text":"","code":""},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"the-base-r-console","chapter":"B Coding in R with the RStudio IDE","heading":"B.2.2.1 The Base R Console","text":"R developed almost two decades ago, longer history derivative language scripting language S-PLUS developed Bell Labs 70s 80s. “Base R” consists “Read Evaluate Print Loop” (REPL) command interpreter, type text commands, evaluated, results printed screen. “R Console” window looks something like .","code":""},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"the-rstudio-integrated-development-environment-ide-1","chapter":"B Coding in R with the RStudio IDE","heading":"B.2.2.2 The RStudio Integrated Development Environment (IDE)","text":"However, developing script, want work text editor send commands console, rather typing directly console. Developing analysis script R essentially exercise programming, developing code best use Integrated Development Environment IDE. IDE provides additional functionality wraps around basic console.IDE highly recommended class RStudio (http://www.rstudio.com) depicted . IDE provides multiple windows additional console greatly facilitate developing code. addition console (appearing bottom left window figure), script editor (top left), provides syntax highlighting, autocompletion, pop-tool tips, window showing functions objects residing memory session “Environment” tab (top right window figure), window shows plots, files working directory, available add-packages, documentation (bottom right).install base R RStudio, interact R RStudio IDE. icons RStudio primitive IDE called “R commander” comes packaged R. R commander sophisticated user-friendly RStudio, make sure launch RStudio IDE R commander clicking correct icon. Launch RStudio also launch R console, need click.\nALWAYS REMEMBER: Launch R though RStudio IDE\n","code":""},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"configure-rstudio-to-maximize-reproducibility-and-minimize-confusion","chapter":"B Coding in R with the RStudio IDE","heading":"B.2.2.3 Configure RStudio to maximize reproducibility and minimize confusion","text":"class, learning develop reproducible scripts. means scripts completely transparently perform analysis start finish way yields result different people using software different computers. transparency key value science, embodied “trust verify” motto. things reproducibly, others can understand check work. benefits science, selfish reason, : important person benefit reproducible script future self. return analysis two weeks vacation, thank earlier self things transparent, reproducible way, can easily pick right left .\ntwo tweaks RStudio installation maximize reproducibility. Go setting menu, uncheck box says “Restore .RData workspace startup”. keep things around workspace, things get messy, unexpected things happen. always start clear workspace. also means never want save workspace exit, set “Never”. thing want save scripts.\nAnother tweak recommend beginners turn inline results image previews RMarkdown files. RMarkdown files just plain text, default, RStudio makes look like images results appear inside text. Beginners mostly familiar software MS Word easily get wrong idea 'part' file. can confusing beginners, turn options . can best see results code chunk running looking console window can view images pop-ups.","code":""},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"live-coding-demo-developing-reproducible-r-scripts","chapter":"B Coding in R with the RStudio IDE","heading":"B.3 Live coding demo: Developing reproducible R scripts","text":"instructor now go live coding exercise give basic overview developing R script using RStudio IDE.Feel free just watch follow along typing script.demonstration make use dataset Berlin Babynames 2012-2020 provided Berliner Landesamt für Bürger- und Ordnungsangelegenheiten (LABO) / BerlinOnline Stadtportal GmbH & Co. KG. need download version data, info one big file: berlin-babynamen.csv (CSV format)R script basic type document can work . simply plain-text file containing set commands executed sequence, top bottom.scripts follow generic structure:\nload add-packages need usedefine custom functionsload data working withwork datasave anything need saveHere example (live-coding script may differ):skills tips demonstrated live coding session include:installing loading add-packagessetting working directorydata importdata entry using \"tibble\"navigating script pane console pane using shortcut keys Ctrl+1 Ctrl+2running line code using Ctrl+Entergetting helpembedding code chunks RMarkdown document\"knitting\" (compiling) dynamic report RMarkdownWe go skills depth later document.","code":"\n# load add-on packages that we need\nlibrary(\"tidyverse\")\nlibrary(\"cowsay\")\n\nbbnames <- read_csv(\"berlin-babynamen.csv\", col_types = \"ficif\")\n\nwho <- c(\"Dale\", \"Juliane\", \"Pia\")\n\ndat <- bbnames %>%\n  filter(vorname %in% who) %>%\n  mutate(vorname = factor(vorname)) %>%\n  group_by(jahr, vorname, .drop = FALSE) %>%\n  summarise(tot = sum(anzahl), .groups = \"drop\")\n\ng <- ggplot(dat, aes(jahr, tot)) +\n  geom_line() +\n  facet_wrap(~ vorname, scales = \"free_y\")\n\nggsave(\"names.png\", g)\n\n# if you lack the cowsay package, then type\n# the following in the console:\n# install.packages(\"cowsay\")\nsay(\"We did it!\", \"signbunny\")"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"self-guided-introduction-with-exercises","chapter":"B Coding in R with the RStudio IDE","heading":"B.4 Self-guided introduction with exercises","text":"","code":""},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"typing-in-commands","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.1 Typing in commands","text":"first going learn interact console. generally, developing R scripts R markdown files, rather working directly console window. However, can consider console kind ’sandbox’ can try lines code adapt get want. can copy back script editor.Mostly, however, typing script editor window (either R script RMarkdown file) sending commands console placing cursor line holding Ctrl key press Enter. Ctrl+Enter key sequence sends command script console.","code":""},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"warming-up-use-r-as-a-calculator","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.1.1 Warming up: Use R as a calculator","text":"One simple way learn R console use calculator. Enter lines code see results match. prepared make lots typos (first) :/R console remembers history commands typed past. Use arrow keys keyboard scroll backwards forwards history. lot faster re-typing.can break math expressions multiple lines; R waits complete expression processing .can break text multiple lines; R waits close quote processing .can add comments R script ’#’ symbol. R interpreter ignore characters # symbol end line.Exercise: Calculate 8,657 divided 6.5.","code":"\n## REPL: Read/Evaluate/Print Loop\n## R prints results back at you\n1 + 1## [1] 2\n1 + 1 + 3## [1] 5\n## here comes a long expression\n## let's break it over multiple lines\n1 + 2 + 3 + 4 + 5 + 6 +\n    7 + 8 + 9 +\n    10## [1] 55\n\"Good afternoon\"## [1] \"Good afternoon\"\n\"There is nothing in the world \nthat makes people so unhappy as fear.  \nThe misfortune that befalls us is \nseldom, or never, as bad as that \nwhich we fear.\n\n- Friedrich Schiller\"## [1] \"There is nothing in the world \\nthat makes people so unhappy as fear.  \\nThe misfortune that befalls us is \\nseldom, or never, as bad as that \\nwhich we fear.\\n\\n- Friedrich Schiller\"\n## comments: any text from '#' on is ignored until end of line\n22 / 7  # approximation to pi## [1] 3.142857\n    8657/6.5## [1] 1331.846"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"storing-results-in-a-variable","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.1.2 Storing results in a variable","text":"Often want store result computation later use. can store variable. important things consider naming variables.capitalization matters (myVar different myvar)use spaces special characters (^&\"'*+?) etc.; use ’_’\nuse space (e.g., my_var legal variable\nname)must begin letter (m2 valid name, 2m )Use assignment operator <- assign value right variable named left.Now set x value, can something :Note print result back stored. view result, just type variable name blank line.","code":"\n## use the assignment operator '<-'\n## R stores the number in the variable\nx <- 5\nx * 2\n\n## R evaluates the expression and stores the result in the variable\nboring_calculation <- 2 + 2## [1] 10\nboring_calculation## [1] 4"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"whitespace","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.1.3 Whitespace","text":"\nsee > beginning line, means R waiting start new command. However, see + instead > start line, means R waiting finish command started previous line. want cancel whatever command started, just press Esc key console window ’ll get back > command prompt.\n","code":"\n# R waits until next line for evaluation\n(3 + 2) *\n     5## [1] 25\n# often useful to spread function arguments over multiple lines\nlibrary(cowsay)\nsay(\"This function call is far too wide to fit all on one line\",\n    \"stretchycat\")## \n##  -------------- \n## This function call is far too wide to fit all on one line \n##  --------------\n##     \\\n##       \\\n##         \\\n##                         ,/|         _.--‛‛^``-...___.._.,;\n##                       /, \\‛.     _-‛          ,--,,,--‛‛‛\n##                      {  \\    `_-‛‛       ‛    /}‛\n## Jill                    `;;‛             ;   ; ;\n##                   ._.--‛‛     ._,,, _..‛  .;.‛\n##                   (,_....----‛‛‛     (,..--‛‛\n## "},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"the-workspace","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.1.4 The workspace","text":"Anytime assign something new variable, R creates new object workspace. Objects workspace exist end session; disappear forever (unless save ).","code":"\nls()  # print the objects in the workspace\n\nrm(\"x\")   # remove the object named x from the workspace\n\nrm(list = ls()) # clear out the workspace## [1] \"backtick\"           \"boring_calculation\" \"chapter_status\"    \n## [4] \"hl\"                 \"path\"               \"pkg\"               \n## [7] \"psyteachr_colors\"   \"psyteachr_colours\"  \"x\""},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"some-basic-data-types","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.2 Some basic data types","text":"four main basic data types R (, critical ones need know ).also specific data type called factor probably give headache sooner later, can get now without .Character strings can include basically anything, including quotes, want quote included 'escape' using backslash:Note just type plain number 10 stored double, even decimal point. want exact integer, use L suffix (10L).ever want know data type something, use class function. also mode function specifically vectors.","code":"\nmy_string <- \"The instructor said, \\\"R is cool,\\\" and the class agreed.\"\nmy_string## [1] \"The instructor said, \\\"R is cool,\\\" and the class agreed.\"\nclass(10) # numeric\nclass(10L) # integer\nclass(\"10\") # string\nclass(10L == 11L) # logical\nmode(TRUE)## [1] \"numeric\"\n## [1] \"integer\"\n## [1] \"character\"\n## [1] \"logical\"\n## [1] \"logical\""},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"vectors","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.3 Vectors","text":"One fundamental data types R vector. vector R like vector math: set ordered elements. elements vector must data type (numeric, character, factor). can create vector enclosing elements c(...), shown .\nmix data types vector; elements vector must data type. mix , R coerce .\nExercise: Create new object vect1 contains following six values: 3, 15, 7.6, 9, 15, 42OK, easy enough, question. type single number console, spits back , like :[1] output? .e., output [1] 3 just 3?eventually get answer, see can discover experiment. operator : , placed two integers x y like : x:y yield sequence integers x y inclusive. make big long vector numbers print .Note number square brackets left hand side output. think ?variable vec ordered container 200 elements, case, integers 200 400. bracked number left hand side tells numeric index (.e., element number) corresponding first value row. first value 200, 19th value 218, 37th value 236, etc.can pick nth element vector using bracket syntax. instance, pull 2nd element vec.Recall c() operator creates vectors. wanted pick one specific value vector position, can make vector numbers like :pull using [] operator, extraction operator, variable vec.OK return original question: get [1] 3 just typed 3L? answer now clear: entered single number, R created vector single element.can also create 'named' vectors, elements name. example:can access elements name using character vector within square brackets. can put order want, can repeat elements:can get vector names using names() function, can set change using something like names(vec2) <- c(\"n1\", \"n2\", \"n3\").Another way access elements using logical vector within square brackets. pull elements vector corresponding element logical vector TRUE. logical vector must length original. can find long vector using length() function.useful tricks save typing creating vectors. Recall command x:y : operator give sequence integers x:y.want repeat vector many times? either type (painful) use rep() function, can repeat vectors different ways.want create sequence something integer steps? can use seq() function. can learn exercises .","code":"\n## put information into a vector using c(...)\nc(1, 2, 3)\n\nc(\"this\", \"is\", \"cool\")\n\n## what happens when you mix types?\nc(2, \"good\", 2, \"b\", \"true\")## [1] 1 2 3\n## [1] \"this\" \"is\"   \"cool\"\n## [1] \"2\"    \"good\" \"2\"    \"b\"    \"true\"\nvect1 <- c(3, 15, 7.6, 9, 15, 42)\n3## [1] 3\nvec <- 200:400\nvec##   [1] 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217\n##  [19] 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235\n##  [37] 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253\n##  [55] 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271\n##  [73] 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289\n##  [91] 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307\n## [109] 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325\n## [127] 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343\n## [145] 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361\n## [163] 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379\n## [181] 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397\n## [199] 398 399 400\nvec[2]## [1] 201\nc(1L, 19L, 37L, 55L)## [1]  1 19 37 55\nvec[c(1L, 19L, 37L, 55L)]\n\n## note also:\nindex <- c(1L, 19L, 37L, 55L)\nvec[index]\n\nvec[c(1L, 1L, 19L, 19L, 19L, 19L)]## [1] 200 218 236 254\n## [1] 200 218 236 254\n## [1] 200 200 218 218 218 218\nvec2 <- c(first = 77.9, second = -13.2, third = 100.1)\nvec2##  first second  third \n##   77.9  -13.2  100.1\nvec2[c(\"third\", \"second\", \"second\")]##  third second second \n##  100.1  -13.2  -13.2\nlength(vec2)\nvec2[c(TRUE, FALSE, TRUE)]## [1] 3\n## first third \n##  77.9 100.1\n# ten zeroes\nrep(0, 10)\n\n# alternating 1 and 3, 7 times\nrep(c(1L, 3L), 7)\n\nrep(c(TRUE, FALSE), 2)##  [1] 0 0 0 0 0 0 0 0 0 0\n##  [1] 1 3 1 3 1 3 1 3 1 3 1 3 1 3\n## [1]  TRUE FALSE  TRUE FALSE\n# Repeat a vector\n# See the ?rep function\nrep(c(TRUE, FALSE), 3)\n\n# Get every other (odd) element of vec\nvec[rep(c(TRUE, FALSE), 100)]\n\n# We can also store the logical vector in a variable and use that\nevens <- rep(c(FALSE, TRUE), 100)## [1]  TRUE FALSE  TRUE FALSE  TRUE FALSE\n##   [1] 200 202 204 206 208 210 212 214 216 218 220 222 224 226 228 230 232 234\n##  [19] 236 238 240 242 244 246 248 250 252 254 256 258 260 262 264 266 268 270\n##  [37] 272 274 276 278 280 282 284 286 288 290 292 294 296 298 300 302 304 306\n##  [55] 308 310 312 314 316 318 320 322 324 326 328 330 332 334 336 338 340 342\n##  [73] 344 346 348 350 352 354 356 358 360 362 364 366 368 370 372 374 376 378\n##  [91] 380 382 384 386 388 390 392 394 396 398 400"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"exercises","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.3.1 Exercises","text":"built-vector letters contains letters English alphabet. Use indexing vector integers extract letters spell 'cat'.\n\n\nSolution\n\n\nletters[c(3, 1, 20)]\nfunction colors() returns color names R aware . length vector returned function? (Use code find answer.)\n\n\nSolution\n\n\nlength(colors())\n","code":"\nletters[c(3, 1, 20)]\nlength(colors())"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"vectorized-operations","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.4 Vectorized Operations","text":"R performs calculations vectors special way. look example using \\(z\\)-scores. \\(z\\)-scores deviation score (score minus mean) divided standard deviation. learn concepts later course. say set four IQ scores.want subtract mean four scores, just use following code:subtracts 100 element vector. R automatically assumes wanted ; called vectorized operation makes possible express operations efficiently.calculate \\(z\\)-scores use formula:\\(z = \\frac{X - \\mu}{\\sigma}\\)X scores, \\(\\mu\\) mean, \\(\\sigma\\) standard deviation. can expression formula R follows:can see computed four \\(z\\)-scores single line code. efficient!One thing useful vectorized logical tests. instance, say wanted find set p-values lower .05. easily like :pull significant p-values like :plain English, command says, \"give elements my_pvals my_pvals < .05 true.\"\" Note my_pvals < .05 first evaluated create logical vector, logical vector used index my_pvals.","code":"\n## example IQ scores: mu = 100, sigma = 15\niq <- c(86, 101, 127, 99)\niq - 100## [1] -14   1  27  -1\n## z-scores\n(iq - 100) / 15## [1] -0.93333333  0.06666667  1.80000000 -0.06666667\nmy_pvals <- c(.1, .001, .33, .049, .051, .02, .773)\nmy_pvals < .05## [1] FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE\nmy_pvals[my_pvals < .05]## [1] 0.001 0.049 0.020"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"exercises-1","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.4.1 Exercises","text":"Create vector integers 0 20 store variable my_ints. divide values 5.modulo operator R %%. command x %% y x y integers give remainder x given divisor y. (instance, 5 %% 3 give 2 2 remainder get divide 5 3.) Calculate modulo values my_ints divisor 5.function call runif(1000, 0, 1) draw 1000 numbers uniform distribution 0 1, simulates p-values get 1000 experiments null hypothesis true. Store result call pvals. Create logical vector called is_sig TRUE corresponding element pvals less .05, FALSE otherwise (hint: vectorized operations last lession), use logical vector pull p-values. Finally, calculate proportion p-values significant.","code":"\nmy_ints <- 0:20\nmy_ints / 5##  [1] 0.0 0.2 0.4 0.6 0.8 1.0 1.2 1.4 1.6 1.8 2.0 2.2 2.4 2.6 2.8 3.0 3.2 3.4 3.6\n## [20] 3.8 4.0\nmy_ints %% 5##  [1] 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 0\npvals <- runif(1000, 0, 1)\n\nis_sig <- pvals < .05\n\nsort(pvals[is_sig])\n\nlength(pvals[is_sig]) / length(pvals)"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"add-on-packages","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.5 Add-on packages","text":"One great things R user extensible: anyone can create new add-software package extends functionality. currently thousands add-packages R users created solve many different kinds problems, just simply fun. packages data visualisation, machine learning, neuroimaging, eyetracking, web scraping, playing games Sudoku.Add-packages distributed base R, downloaded installed archive, way , instance, download install fitness app smartphone.main repository packages reside called CRAN, Comprehensive R Archive Network. package pass strict tests devised R core team allowed part CRAN archive. can install CRAN archive R using install.packages() function.important distinction installing package \nloading package.Installing package done using install.packages(). \nlike installing app smartphone: \napp remain installed remove . \ninstance, want use Facebook phone install \nApp Store Play Store, \nre-install time want use . launch \napp, run background close restart\nphone. Likewise, install package, package \navailable (loaded) every time open R.Installing package done using install.packages(). \nlike installing app smartphone: \napp remain installed remove . \ninstance, want use Facebook phone install \nApp Store Play Store, \nre-install time want use . launch \napp, run background close restart\nphone. Likewise, install package, package \navailable (loaded) every time open R.Loading package: done using library(packagename).\nlike launching app phone: functionality \napp launched remains \nclose app restart. Likewise, run\nlibrary(packagename) within session, functionality \npackage referred packagename made available \nR session. next time start R, need run \nlibrary() function want access functionality.Loading package: done using library(packagename).\nlike launching app phone: functionality \napp launched remains \nclose app restart. Likewise, run\nlibrary(packagename) within session, functionality \npackage referred packagename made available \nR session. next time start R, need run \nlibrary() function want access functionality.may able permanently install packages using R system; may able public workstations lack appropriate privileges.Try installing library fortunes system:get error message, installation successful.can access functionality fortune current R session follows:typed , can run function fortune(), spouts random wisdom one R help lists:Note use convention package::function() package::object indicate add-package function object resides. instance, see readr::read_csv(), refers function read_csv() readr add-package. see function introduced without package name, means part base R system add-package (depending context). Sometimes make explicit using base place package name; instance, might refer rnorm() base base::rnorm().","code":"\ninstall.packages(\"fortunes\")\nlibrary(fortunes)\nfortune()## \n## Please do think hard before you tell other people what they 'should' do for you.\n##    -- Brian D. Ripley\n##       R-devel (January 2006)"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"help","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.6 Getting help","text":"","code":"\n# these methods are all equivalent ways of getting help\nhelp(\"say\") # if package 'cowsay' is loaded\n?say\nhelp(\"say\", package=\"cowsay\") # if cowsay not loaded\n\n??say # search for help files with \"say\"\n\n# start up help in a browser\nhelp.start()"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"calling-functions","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.7 Calling functions","text":"R lot build functions useful, like round() rounding numbers, sort() sorting . examples use functions.wanted sort scores rounding , can embed sort(iq_z) function first argument round().","code":"\niq_z <- (iq - 100) / 15\n\nsort(iq_z)\n\nround(iq_z, 2)## [1] -0.93333333 -0.06666667  0.06666667  1.80000000\n## [1] -0.93  0.07  1.80 -0.07\nround(sort(iq_z), 2)## [1] -0.93 -0.07  0.07  1.80"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"function-syntax","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.7.1 Function syntax","text":"Functions following generic syntax:functionname(arg1, arg2, arg3, ...)function named arguments may may default\nvalues. Arguments without default values mandatory; arguments\nvalues optional. optional argument \nspecified, take default value. can override default values supplying .Arguments can specified :position (unnamed)nameMost functions return value, may also produce ’side effects’\nlike printing console.illustrate, function rnorm() generates random numbers standard normal distribution. help page rnorm() (accessed typing ?rnorm console) shows syntaxrnorm(n, mean = 0, sd = 1)n number randomly generated numbers want, mean mean distribution, sd standard deviation. default mean 0, default standard deviation 1. default n means ’ll get error specify :Error rnorm() : argument \"n\" missing, defaultIf want 10 random numbers distribution mean 0 standard deviation, can just use defaults.want 10 numbers distribution mean 100:equivalent less efficient way calling function:need name arguments R recognize intended fill first second arguments position function call. However, want change default argument coming later list, need name . instance, wanted keep default mean = 0 change standard deviation 100 way:","code":"\nrnorm()\nrnorm(10)##  [1] -0.3161760  0.7873856  0.6809993  0.2525030  1.3192531 -0.3973679\n##  [7]  0.7504068 -0.6808195  1.1904468  0.7538612\nrnorm(10, 100)##  [1] 102.63501 100.34930  98.90351  98.77154 100.71002 101.07751  99.14813\n##  [8] 101.58881 100.77392 101.71783\nrnorm(n = 10, mean = 100)##  [1]  99.67864  99.76211 100.60444  99.76635  99.60005  98.10233 100.39731\n##  [8]  99.87946 100.10954  99.62213\nrnorm(10, sd = 100)##  [1]  -75.74403  132.97950   -5.90781  -41.21301  -15.24157  145.70074\n##  [7]  121.50595   48.37434   78.62530 -114.52812"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"cowsay","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.7.2 Exercises","text":"following exercises, working cowsay add-package (help(package = \"cowsay\"))Check see vignettes available package.Load read vignette get idea package works.first task develop reproducible script accomplishes tasks . Compile RMarkdown (rmd) document HTML. Make sure report includes code addition output.Important! Try perform task making shortest function call can taking advantage function defaults include results R script.Make cat say, “FEED ”\n\n\nSolution\n\n\nsay(\"FEED \")\n## \n##  -------------- \n## FEED \n##  --------------\n##     \\\n##       \\\n##         \\\n##             |\\___/|\n##           ==) ^Y^ (==\n##             \\  ^  /\n##              )=*=(\n##             /     \\\n##             |     |\n##            /| | | |\\\n##            \\| | |_|/\\\n##       jgs  //_// ___/\n##                \\_)\n## \nMake cat say, “FEED ”Make shark say “Hello world!”\n\n\nSolution\n\n\nsay(\"Hello world!\", \"shark\")\n## \n##  -------------- \n## Hello world! \n##  --------------\n##     \\\n##       \\\n##         \\\n##               /\"\"-._\n##               .       '-,\n##                :          '',\n##                 ;      *     '.\n##                  ' *         () '.\n##                    \\               \\\n##                     \\      _.---.._ '.\n##                     :  .' _.--''-''  \\ ,'\n##         .._           '/.'             . ;\n##         ; `-.          ,                \\'\n##          ;   `,         ;              ._\\\n##           ;    \\     _,-'                ''--._\n##           :    \\_,-'                          '-._\n##           \\ ,-'                       .          '-._\n##           .'         __.-'';            \\...,__       '.\n##         .'      _,-'        \\              \\   ''--.,__  '\\\n##         /    _,--' ;         \\              ;           \\^.}\n##         ;_,-' )     \\  )\\      )            ;\n##              /       \\/  \\_.,-'             ;\n##             /                              ;\n##          ,-'  _,-'''-.    ,-.,            ;      PFA\n##       ,-' _.-'        \\  /    |/'-._...--'\n##      :--``             )/\n##   '\n## \nMake shark say “Hello world!”Make anything produce famous quote\n\n\nSolution\n\n\nsay(\"want know God thinks money, just look people gave . ~Dorothy Parker\", \n    \"grumpycat\")\n## \n##  -------------- \n## want know God thinks money, just look people gave . ~Dorothy Parker \n##  --------------\n##     \\\n##       \\\n##         \\\n##       ﾊ _ ﾊ\n##       ಠ X ಠ\n## \nMake anything produce famous quoteMake clippy warn user impending apocalypse\n\n\nSolution\n\n\nsay(\"looks like trying annihilate planet particle beam. sure want ?\", \"clippy\")\n## \n## \n##  ----- \n## looks like trying annihilate planet particle beam. sure want ? \n##  ------ \n##     \\   \n##      \\   __\n##    / \\\n##    | |\n##    @ @\n##   || ||\n##   || ||\n##   |\\_/|\n##   \\___/ GB\nMake clippy warn user impending apocalypseMake cat produce random quote R coder. get different quote every time run code (hint: read documentation cowsay::say()).\n\n\nSolution\n\n\nsay(\"fortune\")\n## \n##  -------------- \n## Morten Welinder: result changes 70000 orders magnitude right . Ugh. affecting erlang calculations mine pretty badly.\n## Peter Dalgaard: Make 30400 orders magnitude (natural logs y'know)... something 300000 orders magnitude 1, mind ! devil calculating? probability random configuration atoms make known universe?\n##  Morten Welinder Peter Dalgaard\n##  reporting pgamma discontinuity\n##  R-devel\n##  October 2004 \n##  --------------\n##     \\\n##       \\\n##         \\\n##             |\\___/|\n##           ==) ^Y^ (==\n##             \\  ^  /\n##              )=*=(\n##             /     \\\n##             |     |\n##            /| | | |\\\n##            \\| | |_|/\\\n##       jgs  //_// ___/\n##                \\_)\n## \nMake cat produce random quote R coder. get different quote every time run code (hint: read documentation cowsay::say()).Define variable named creature assign value one types creatures accepted say() function. use variable output current time.\n\n\nSolution\n\n\ncreature <- \"spider\"\n\nsay(base::date(), creature)\n## \n##  ----- \n## Thu Mar  3 23:50:13 2022 \n##  ------ \n##     \\   \n##      \\\n##               |\n##               |\n##               |\n##              __\n##           | /  \\ |\n##          \\_\\\\  //_/\n##           .'/()\\'.\n##            \\\\  //  [nosig]\n## \nDefine variable named creature assign value one types creatures accepted say() function. use variable output current time.Change value variable creature thing, make display time.\n\n\nSolution\n\n\ncreature <- \"buffalo\"\n\nsay(base::date(), creature)\n## \n##  -------------- \n## Thu Mar  3 23:50:13 2022 \n##  --------------\n##     \\\n##       \\\n##         \\\n##                    _.-````'-,_\n##          _,.,_ ,-'`           `'-.,_\n##        /)     (                   '``-.\n##       ((      ) )                      `\\\n##         \\)    (_/                        )\\\n##         |       /)           '    ,'    / \\\n##         `\\    ^'            '     (    /  ))\n##           |      _/\\ ,     /    ,,`\\   (  \"`\n##           \\Y,   |   \\  \\  | ````| / \\_ \\\n##             `)_/      \\  \\  )    ( >  ( >\n##                        \\( \\(     |/   |/\n##           mic & dwb  /_(/_(    /_(  /_(\n## \nChange value variable creature thing, make display time.Restart R re-run script check whether reproducible.Restart R re-run script check whether reproducible.","code":"\nvignette(package = \"cowsay\")\nvignette(\"cowsay_tutorial\", package = \"cowsay\")\nsay(\"FEED ME\")## \n##  -------------- \n## FEED ME \n##  --------------\n##     \\\n##       \\\n##         \\\n##             |\\___/|\n##           ==) ^Y^ (==\n##             \\  ^  /\n##              )=*=(\n##             /     \\\n##             |     |\n##            /| | | |\\\n##            \\| | |_|/\\\n##       jgs  //_// ___/\n##                \\_)\n## \nsay(\"Hello world!\", \"shark\")## \n##  -------------- \n## Hello world! \n##  --------------\n##     \\\n##       \\\n##         \\\n##               /\"\"-._\n##               .       '-,\n##                :          '',\n##                 ;      *     '.\n##                  ' *         () '.\n##                    \\               \\\n##                     \\      _.---.._ '.\n##                     :  .' _.--''-''  \\ ,'\n##         .._           '/.'             . ;\n##         ; `-.          ,                \\'\n##          ;   `,         ;              ._\\\n##           ;    \\     _,-'                ''--._\n##           :    \\_,-'                          '-._\n##           \\ ,-'                       .          '-._\n##           .'         __.-'';            \\...,__       '.\n##         .'      _,-'        \\              \\   ''--.,__  '\\\n##         /    _,--' ;         \\              ;           \\^.}\n##         ;_,-' )     \\  )\\      )            ;\n##              /       \\/  \\_.,-'             ;\n##             /                              ;\n##          ,-'  _,-'''-.    ,-.,            ;      PFA\n##       ,-' _.-'        \\  /    |/'-._...--'\n##      :--``             )/\n##   '\n## \nsay(\"If you want to know what God thinks of money, just look at the people he gave it to. ~Dorothy Parker\", \n    \"grumpycat\")## \n##  -------------- \n## If you want to know what God thinks of money, just look at the people he gave it to. ~Dorothy Parker \n##  --------------\n##     \\\n##       \\\n##         \\\n##       ﾊ _ ﾊ\n##       ಠ X ಠ\n## \nsay(\"It looks like you are trying to annihilate the planet with a particle beam. Are you sure you want to do this?\", \"clippy\")## \n## \n##  ----- \n## It looks like you are trying to annihilate the planet with a particle beam. Are you sure you want to do this? \n##  ------ \n##     \\   \n##      \\   __\n##    / \\\n##    | |\n##    @ @\n##   || ||\n##   || ||\n##   |\\_/|\n##   \\___/ GB\nsay(\"fortune\")## \n##  -------------- \n## Morten Welinder: The result changes 70000 orders of magnitude right here. Ugh. This is affecting some erlang calculations of mine pretty badly.\n## Peter Dalgaard: Make that 30400 orders of magnitude (natural logs y'know)... On something that's about 300000 orders of magnitude below 1, mind you! What the devil are you calculating? The probability that a random configuration of atoms would make up the known universe?\n##  Morten Welinder and Peter Dalgaard\n##  reporting a pgamma discontinuity\n##  R-devel\n##  October 2004 \n##  --------------\n##     \\\n##       \\\n##         \\\n##             |\\___/|\n##           ==) ^Y^ (==\n##             \\  ^  /\n##              )=*=(\n##             /     \\\n##             |     |\n##            /| | | |\\\n##            \\| | |_|/\\\n##       jgs  //_// ___/\n##                \\_)\n## \ncreature <- \"spider\"\n\nsay(base::date(), creature)## \n##  ----- \n## Thu Mar  3 23:50:13 2022 \n##  ------ \n##     \\   \n##      \\\n##               |\n##               |\n##               |\n##              __\n##           | /  \\ |\n##          \\_\\\\  //_/\n##           .'/()\\'.\n##            \\\\  //  [nosig]\n## \ncreature <- \"buffalo\"\n\nsay(base::date(), creature)## \n##  -------------- \n## Thu Mar  3 23:50:13 2022 \n##  --------------\n##     \\\n##       \\\n##         \\\n##                    _.-````'-,_\n##          _,.,_ ,-'`           `'-.,_\n##        /)     (                   '``-.\n##       ((      ) )                      `\\\n##         \\)    (_/                        )\\\n##         |       /)           '    ,'    / \\\n##         `\\    ^'            '     (    /  ))\n##           |      _/\\ ,     /    ,,`\\   (  \"`\n##           \\Y,   |   \\  \\  | ````| / \\_ \\\n##             `)_/      \\  \\  )    ( >  ( >\n##                        \\( \\(     |/   |/\n##           mic & dwb  /_(/_(    /_(  /_(\n## "},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"pipes","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.8 Stringing together commands with pipes","text":"Pipes (%>%) useful stringing together sequence commands R. might bit confusing first worth learning make code readable efficient.\npipes recent innovation, part base R. means need load add-package use . Although \"home\" package pipe operator package called magrittr, commonly gain access loading tidyverse package (library(\"tidyverse\")). get either following errors script:Error: unexpected SPECIAL \"%>%\"\norError: find function \"%>%\"tried use %>% library(\"tidyverse\").easiest understand use pipes example. say want sample 5 random integers 1 10 (replacement), figure unique numbers sampled, sort descending order. need call three functions sequence: sample() generate integers, unique() figure unique integers sampled (integer may sampled multiple times), sort() decreasing = TRUE put descending order. might write code like :nothing wrong code, required us define variables x y ever need , clutter environment. avoid rewrite code using nested function calls like :(call looks confusing, !) call sample() embedded within call unique() turn embedded within call sort(). functions executed embedded (\"bottom\") least embedded (\"top\"), starting function sample(), whose result passed first argument unique(), whose result turn passed first argument sort(); notice second argument sort (TRUE) way end statement, making hard figure three functions belongs . read left right; however, understanding code requires us work way right left, therefore unnatural. Moreover simply ugly line code.pipes come . can re-write original code using pipes like :R calculate result sample(1:10, 5, replace = TRUE) pass result first argument unique(); , result unique() turn passed along first argument sort() second argument set TRUE. thing note function call right hand side pipe, omit first argument start second, pipe automatically places result call left spot.","code":"\nx <- sample(1:10, 5, replace = TRUE)\ny <- unique(x)\nsort(y, TRUE) # set second argument to 'TRUE' so that sort order is descending## [1] 10  7  6  4\nsort(unique(sample(1:10, 5, replace = TRUE)), TRUE)## [1] 9 4 3\nsample(1:10, 5, replace = TRUE) %>% \n  unique() %>% \n  sort(TRUE)## [1] 9 7 5 3"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"exercises-2","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.8.1 Exercises","text":"Re-write following sequence commands single 'pipeline'.Deconstruct pipeline back separate commands.","code":"\n# do not edit this chunk\nx <- 1:20 # integers from 1:20\ny <- rep(x, 2) # then repeat them twice\nz <- sum(y) # and then take the sum\nx <- 1:20 %>% rep(2) %>% sum()\n# do not edit this chunk\nlager <- LETTERS[c(18, 5, 7, 1, 12)] %>%\n  rev() %>%\n  paste(collapse = \"\")\nregal <- LETTERS[c(18, 5, 7, 1, 12)]\nreversed <- rev(regal)\nlager <- paste(reversed, collapse = \"\") # make it into a string"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"lists","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.9 Lists","text":"Recall vectors can contain data one type. want store collection data different data types? purpose use list. Define list using list() function.can access elements list either position:name, like :like :\nFun fact: tabular data, stored data.frame tibble objects, learn next section, special type list. means can access columns one object using tablename$column syntax, sometimes useful.\n","code":"\n## information about today\ntoday <- list(date = \"2018-12-06\",\n     n_emails_in_inbox = 500L,\n     people_who_stopped_by = c(\"Niamh\", \"Lynda\", \"Alex\"),\n     weather = \"rainy\",\n     average_temp = 6.5\n     )\n## note the use of the double square bracket!\ntoday[[2]]## [1] 500\ntoday[[\"people_who_stopped_by\"]]## [1] \"Niamh\" \"Lynda\" \"Alex\"\ntoday$weather## [1] \"rainy\""},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"tabular-data","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.10 Tabular data","text":"working course tabular data, data arranged form table.Tabular data structures, like lists, allow collection data different types (characters, integers, logical, etc.) subject constraint \"column\" table (element list) must number elements. base R version table called data.frame 'tidyverse' version called tibble. Tibbles far easier work , using . learn differences two data structures, see vignette(\"tibble\").Tabular data becomes especially important talk tidy data later , consists set simple principles structuring data.creating tibble scratch, can use tibble() function, type data right . Note want value repeat multiple times, specify one-element vector; R expand vector fill table. columns tibble must lengths length 1.want use tibble() function, either need load tibble package tidyverse package (load tibble addition packages). latter.can get information table dimensions using functions ncol() (number columns), nrow() (number rows), dim() (vector number rows number columns).","code":"\nlibrary(\"tidyverse\")\nmonths <- tibble(ID = 1:12,\n                 name = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n                          \"May\", \"Jun\", \"Jul\", \"Aug\",\n                          \"Sep\", \"Oct\", \"Nov\", \"Dec\"))\n\n# print it\nmonths\n\n# how many rows?\nnrow(months)\n\n# how many columns?\nncol(months)"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"viewing-your-tibble","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.10.1 Viewing your tibble","text":"Always, always, always, look data created table loaded file. Also look step transforms tibble. view table, best console unless specifically want part script report.three ways look tibble: View() [*NB: capital 'V'], print(), glimpse().print() method can run explicitly, commonly called just typing variable name blank line. Usually call print() want fine control information displayed.Note default print entire table, just first 10 rows. look starwars table built tidyverse.can see 87 rows 14 column table, can see first 10 rows first 8 columns.want see 87 rows reason, use explicit call print(), set argument n number rows want see. want , just use +Inf, symbol 'infinite' rows.still see columns. important us, can use glimpse(), gives sideways version tibble.way look table graphical spreadsheet-like version given View() (capital 'V'). can useful console, ever put one script create annoying pop-window user goes run .Note data.frame objects printed different ways tibble objects. print data.frame object thousands millions rows, just get preview... spam console row upon row data. want make data.frame tibble prints nicely, just use as_tibble() function.","code":"\nlibrary(\"tidyverse\")\nstarwars## # A tibble: 87 × 14\n##    name    height  mass hair_color  skin_color eye_color birth_year sex   gender\n##    <chr>    <int> <dbl> <chr>       <chr>      <chr>          <dbl> <chr> <chr> \n##  1 Luke S…    172    77 blond       fair       blue            19   male  mascu…\n##  2 C-3PO      167    75 <NA>        gold       yellow         112   none  mascu…\n##  3 R2-D2       96    32 <NA>        white, bl… red             33   none  mascu…\n##  4 Darth …    202   136 none        white      yellow          41.9 male  mascu…\n##  5 Leia O…    150    49 brown       light      brown           19   fema… femin…\n##  6 Owen L…    178   120 brown, grey light      blue            52   male  mascu…\n##  7 Beru W…    165    75 brown       light      blue            47   fema… femin…\n##  8 R5-D4       97    32 <NA>        white, red red             NA   none  mascu…\n##  9 Biggs …    183    84 black       light      brown           24   male  mascu…\n## 10 Obi-Wa…    182    77 auburn, wh… fair       blue-gray       57   male  mascu…\n## # … with 77 more rows, and 5 more variables: homeworld <chr>, species <chr>,\n## #   films <list>, vehicles <list>, starships <list>\nprint(starwars, n = +Inf) # try this in the console\nglimpse(starwars)## Rows: 87\n## Columns: 14\n## $ name       <chr> \"Luke Skywalker\", \"C-3PO\", \"R2-D2\", \"Darth Vader\", \"Leia Or…\n## $ height     <int> 172, 167, 96, 202, 150, 178, 165, 97, 183, 182, 188, 180, 2…\n## $ mass       <dbl> 77.0, 75.0, 32.0, 136.0, 49.0, 120.0, 75.0, 32.0, 84.0, 77.…\n## $ hair_color <chr> \"blond\", NA, NA, \"none\", \"brown\", \"brown, grey\", \"brown\", N…\n## $ skin_color <chr> \"fair\", \"gold\", \"white, blue\", \"white\", \"light\", \"light\", \"…\n## $ eye_color  <chr> \"blue\", \"yellow\", \"red\", \"yellow\", \"brown\", \"blue\", \"blue\",…\n## $ birth_year <dbl> 19.0, 112.0, 33.0, 41.9, 19.0, 52.0, 47.0, NA, 24.0, 57.0, …\n## $ sex        <chr> \"male\", \"none\", \"none\", \"male\", \"female\", \"male\", \"female\",…\n## $ gender     <chr> \"masculine\", \"masculine\", \"masculine\", \"masculine\", \"femini…\n## $ homeworld  <chr> \"Tatooine\", \"Tatooine\", \"Naboo\", \"Tatooine\", \"Alderaan\", \"T…\n## $ species    <chr> \"Human\", \"Droid\", \"Droid\", \"Human\", \"Human\", \"Human\", \"Huma…\n## $ films      <list> <\"The Empire Strikes Back\", \"Revenge of the Sith\", \"Return…\n## $ vehicles   <list> <\"Snowspeeder\", \"Imperial Speeder Bike\">, <>, <>, <>, \"Imp…\n## $ starships  <list> <\"X-wing\", \"Imperial shuttle\">, <>, <>, \"TIE Advanced x1\",…\nmtcars # prints out way too many rows; TMI\n\nas_tibble(mtcars) # much cleaner\nmtcars2 <- as_tibble(mtcars) # store it"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"accessing-rows-and-columns","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.10.2 Accessing rows and columns","text":"various base R ways accessing specific columns rows table useful know , learning easier (readable) ways get lecture data wrangling. Examples base R accessing functions provided reference.learn tidyverse way perform data frame operations afternoon lessons.","code":"\nmonths[1, ] # first row\n\nmonths[, 2] # second column (position)\n\nmonths[1:3, ] # first 3 months\n\nmonths[, c(\"Month\")] # access column by name\n\nmonths$month  # by column name"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"exercises-3","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.10.3 Exercises","text":"Create tibble name, age, sex 3-5 people whose names, ages, sex know.Convert built-base R iris dataset tibble, store variable iris2.Create tibble structure table , using minimum typing possible. (Hint: rep()). Store variable my_tbl.","code":"\n# or you can do this with the tibble function\nfamily <- tibble(name = c(\"Jorge\", \"Esther\", \"Mel\"),\n                 age = c(40, 41, 20),\n                 sex = c(\"male\", \"female\", \"male\") )\n\n# also note:\n# you can type this in row by row, rather than column by column,\n# using the 'tribble' function. See ?tribble and \nfamily <- tribble(~name,  ~age, ~sex,\n                  \"Jorge\",   40,  \"male\",\n                  \"Esther\",  41,  \"female\",\n                  \"Mel\",     20,  \"male\")\niris2 <- as_tibble(iris)## # A tibble: 8 × 4\n##      ID A     B     C    \n##   <int> <chr> <chr> <chr>\n## 1     1 A1    B1    C1   \n## 2     2 A1    B2    C1   \n## 3     3 A1    B1    C1   \n## 4     4 A1    B2    C1   \n## 5     5 A2    B1    C1   \n## 6     6 A2    B2    C1   \n## 7     7 A2    B1    C1   \n## 8     8 A2    B2    C1\nmy_tbl <- tibble(ID = 1:8,\n                 A = rep(c(\"A1\", \"A2\"), each = 4),\n                 B = rep(c(\"B1\", \"B2\"), 4),\n                 C = \"C1\")    "},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"working-with-files","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.11 Working with files","text":"","code":""},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"workdir","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.11.1 Working Directory","text":"developing analysis, usually want scripts data files one subtree computer's directory structure. Usually single working directory data scripts stored.references data files scripts relative \ntop level directory tree; always use relative\npaths, never use absolute paths.references data files scripts relative \ntop level directory tree; always use relative\npaths, never use absolute paths.Never set change working directory script; always store\nmain script file top-level directory manually set\nworking directory location.Never set change working directory script; always store\nmain script file top-level directory manually set\nworking directory location.instance, Windows machine data scripts live directory C:\\Carla's_files\\thesis22\\my_thesis\\new_analysis, set working directory new_analysis one two ways: (1) going Session pull menu RStudio choosing Set Working Directory, (2) typing setwd(\"C:\\Carla's_files\\thesis22\\my_thesis\\new_analysis\") console window.\nNever put setwd() command script, others directory tree (laptop dies get new one, neither ).\nscript needs file subdirectory new_analysis, say, analysis2/dat.rds, load using relative path:load using absolute path:\nAlso note convention using forward slashes, unlike Windows specific convention using backward slashes. make references files platform independent.\n","code":"\ndat <- readRDS(\"analysis2/dat.rds\")  # right way\ndat <- readRDS(\"C:/Carla's_files/thesis22/my_thesis/new_analysis/analysis2/dat.rds\")   # wrong"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"load","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.11.2 Loading Data","text":"many different types files might work data analysis. different file types usually distinguished three letter extension following period end file name. examples different types files functions use read write .Note: following conventions introduced section add-packages, readr::read_csv() refers read_csv() function readr package, readxl::read_excel() refers function read_excel() package readxl.Probably common file type encounter .csv (comma-separated values). name suggests, CSV file distinguishes values go variable separating commas, text values sometimes enclosed double quotes. first line file usually provides names variables. example, first lines CSV containing Scottish baby names (see page National Records Scotland):six variables dataset, names given first line file: yr, sex, FirstForename, number, rank, position. can see values variables given order, separated commas, subsequent line file.read CSV files, best practice use readr::read_csv() function. readr package automatically loaaded part tidyverse package, using almost every script. Note normally want store result read_csv() function variable, :loaded, can view data using data viewer. upper right hand window RStudio, Environment tab, see object dat listed.allows check data loaded properly. can close tab ’re done looking —remove object.","code":"yr,sex,FirstForename,number,rank,position\n1974,B,David,1794,1,1\n1974,B,John,1528,2,2\n1974,B,Paul,1260,3,3\n1974,B,Mark,1234,4,4\n1974,B,James,1202,5,5\n1974,B,Andrew,1067,6,6\n1974,B,Scott,1060,7,7\n1974,B,Steven,1020,8,8\n1974,B,Robert,885,9,9\n1974,B,Stephen,866,10,10\nlibrary(tidyverse)\ndat <- read_csv(\"my_data_file.csv\")"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"writing-data","chapter":"B Coding in R with the RStudio IDE","heading":"B.4.11.3 Writing Data","text":"data want save data CSV file, use readr::write_csv(), follows.save data CSV format working directory.","code":"\nwrite_csv(dat, \"my_data_file2.csv\")"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"reproducible-reports-with-rstudio-and-rmarkdown","chapter":"B Coding in R with the RStudio IDE","heading":"B.5 Reproducible reports with RStudio and RMarkdown","text":"working toward producing reproducible reports following principles “literate programming”. basic idea text report together single document along R code needed perform analyses generate tables. report ’compiled’ original format , portable format, HTML PDF. different traditional cutting pasting approaches , instance, create graph Microsoft Excel statistics program like SPSS paste Microsoft Word.using RMarkdown create reproducible reports, enables interleaving text R code blocks.can read Donald Knuth's idea literate programming Wikipedia page, RMarkdown format .reproducible script contain sections code code blocks. code block delimited using three backtick symbols row, like :open new RMarkdown file template, see example document several code blocks .create HTML PDF report rmarkdown (rmd) document, compile . Compiling document called ’knitting’ RStudio. button looks like ball yarn needles click compile file report. Try template file see happens!Exercise: Create RMarkdown file including answer exercises function calls cowsay (questions 1--7 ), compile HTML.","code":"This is just some text before the code block\n\n```{r blockname}\n# now we are inside the R code block\nrnorm(10)  # generate some random numbers\n```\n\nnow we're back outside the code block"},{"path":"coding-in-r-with-the-rstudio-ide.html","id":"resources-6","chapter":"B Coding in R with the RStudio IDE","heading":"B.6 Resources","text":"may find additional resources useful supporting learning R/RStudio.RStudio projectsRStudio IDE CheatsheetRStudio Data Import CheatsheetGithub RStudioR MarkdownIndexingTibbles online helpChapter 11: Data Import R Data ScienceVideo: Developing analysis R/RStudio: Scottish babynames (1/2)Video: Developing analysis R/RStudio: Scottish babynames (2/2)","code":""},{"path":"references-and-further-reading.html","id":"references-and-further-reading","chapter":"C References and Further Reading","heading":"C References and Further Reading","text":"","code":""},{"path":"references-and-further-reading.html","id":"further-reading","chapter":"C References and Further Reading","heading":"C.1 Further reading","text":"good textbook covers lot ground way depth (following Bayesian approach) Statistical Rethinking Richard McElreath.Check online textbooks resources group University Glasgow developing. great resources learn data wrangling visualization, among things.","code":""},{"path":"references-and-further-reading.html","id":"linear-mixed-effects-models-1","chapter":"C References and Further Reading","heading":"C.2 Linear mixed-effects models","text":"classic crossed random effects Baayen, Davidson, Bates (2008).specifying random effects structure, see Barr, Levy, Scheepers, Tily (2013). Barr (2013) discusses factorial designs. Matuschek et al. (2017) argue 'keep maximal' view data-driven random effects.recent tutorial simulating data crossed random factors subjects stimuli, check Debruine Barr (2021).","code":""},{"path":"references-and-further-reading.html","id":"references","chapter":"C References and Further Reading","heading":"C.3 References","text":"Cruise, R. J., Cash, R. W., & Bolton, D. L. (1985). Development validation instrument measure statistical anxiety. American Statistical Association Proceedings Section Statistical Education, 4, 92–97.Hanna, D., Shevlin, M., & Dempster, M. (2008). structure statistics anxiety rating scale: confirmatory factor analysis using uk psychology students. Personality Individual Differences, 45(1), 68–74.","code":""}]
